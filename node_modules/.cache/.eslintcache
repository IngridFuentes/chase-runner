[{"/Users/ingridf/Documents/chase-runner/src/index.js":"1","/Users/ingridf/Documents/chase-runner/src/App.js":"2","/Users/ingridf/Documents/chase-runner/src/components/banner.js":"3","/Users/ingridf/Documents/chase-runner/src/views/Goals.jsx":"4","/Users/ingridf/Documents/chase-runner/src/views/NewRun.jsx":"5","/Users/ingridf/Documents/chase-runner/src/views/Stats.jsx":"6","/Users/ingridf/Documents/chase-runner/src/hooks/useCurrentUser.js":"7","/Users/ingridf/Documents/chase-runner/src/components/SimpleMap.js":"8","/Users/ingridf/Documents/chase-runner/src/hooks/useAuthStatus.js":"9","/Users/ingridf/Documents/chase-runner/src/views/Dashboard.jsx":"10","/Users/ingridf/Documents/chase-runner/src/views/Home.jsx":"11","/Users/ingridf/Documents/chase-runner/src/hooks/useGeoLocation.js":"12","/Users/ingridf/Documents/chase-runner/src/views/AddRun.jsx":"13","/Users/ingridf/Documents/chase-runner/src/views/SavedPinnedPlaces.jsx":"14","/Users/ingridf/Documents/chase-runner/src/components/Banner.js":"15","/Users/ingridf/Documents/chase-runner/src/views/SearchFilter.jsx":"16","/Users/ingridf/Documents/chase-runner/src/views/Map.jsx":"17","/Users/ingridf/Documents/chase-runner/src/hooks/useMapData.js":"18","/Users/ingridf/Documents/chase-runner/src/views/StatsPopup.jsx":"19"},{"size":259,"mtime":1699420845344,"results":"20","hashOfConfig":"21"},{"size":1066,"mtime":1699418768516,"results":"22","hashOfConfig":"21"},{"size":1266,"mtime":1699418653741,"results":"23","hashOfConfig":"21"},{"size":92,"mtime":1698030524612,"results":"24","hashOfConfig":"21"},{"size":3951,"mtime":1699642167732,"results":"25","hashOfConfig":"21"},{"size":729,"mtime":1699665057591,"results":"26","hashOfConfig":"21"},{"size":1106,"mtime":1698704390175,"results":"27","hashOfConfig":"21"},{"size":2784,"mtime":1698779897878,"results":"28","hashOfConfig":"21"},{"size":1249,"mtime":1697917604270,"results":"29","hashOfConfig":"21"},{"size":1187,"mtime":1699642197464,"results":"30","hashOfConfig":"21"},{"size":245,"mtime":1697918056213,"results":"31","hashOfConfig":"21"},{"size":1011,"mtime":1698764996550,"results":"32","hashOfConfig":"21"},{"size":2911,"mtime":1699387872495,"results":"33","hashOfConfig":"21"},{"size":991,"mtime":1699244648591,"results":"34","hashOfConfig":"21"},{"size":1510,"mtime":1701389332804,"results":"35","hashOfConfig":"21"},{"size":379,"mtime":1699595282546,"results":"36","hashOfConfig":"21"},{"size":9104,"mtime":1702432228859,"results":"37","hashOfConfig":"21"},{"size":10328,"mtime":1702432310217,"results":"38","hashOfConfig":"21"},{"size":873,"mtime":1699667709989,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"jvtu1t",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"43"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"43"},"/Users/ingridf/Documents/chase-runner/src/index.js",[],[],[],"/Users/ingridf/Documents/chase-runner/src/App.js",[],[],"/Users/ingridf/Documents/chase-runner/src/components/banner.js",[],[],"/Users/ingridf/Documents/chase-runner/src/views/Goals.jsx",[],[],"/Users/ingridf/Documents/chase-runner/src/views/NewRun.jsx",["105"],[],"import { useState, useEffect } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport styles from '../styles/NewRun.module.css';\nimport SearchFilter from \"./SearchFilter\";\nimport { Link } from 'react-router-dom';\n\n\nconst NewRun = () => {\n    const [race, setRace] = useState([]);\n    const [buttonClicked, setButtonClicked] = useState(false);\n    const [searchText, setSearchText] = useState('');\n    // const [stateLocation, setStateLocation] = useState(\"\");\n    // const [eventType, setEventType] = useState(\"\");\n\n    const fetchEventData = async () => {\n        try {\n            const response = await fetch('http://www.RunReg.com/api/search/', {\n            }, {\n                mode: \"no-cors\"\n            })\n            const data = await response.json();\n            setRace(data.MatchingEvents || []);\n            console.log(data.MatchingEvents, 'data')\n        } catch (error) {\n            console.error(error);\n        }\n    };\n// console.log(fetchEventData(), 'fetch')\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetchEventData();\n        setButtonClicked(true);\n    };\n\n    const handleSearchChange = (text) => {\n        setSearchText(text);\n        const filteredData = race.filter((event) => event.EventState.toLowerCase().includes(text.toLowerCase()))\n        setRace(filteredData)\n    };\n\n    return (\n        <div className={styles.newrunSearch}>\n            <Link to=\"/dashboard\"className={styles.link}>Go to dashboard</Link>\n            { !buttonClicked && ( \n            <form onSubmit={handleSubmit}>\n                <label>\n                    <button type=\"submit\">Show List of Runs</button>\n                </label>\n            </form>\n            )}\n            {buttonClicked && (\n            <SearchFilter value={searchText} onChange={handleSearchChange}/>\n            )}\n            <Container>\n                <div className={styles.results}>\n                        {race.map((event, index) => (\n                                // console.log(event.EventCity, \"e\")\n                            <Row key={index}> \n                                        <Col md={2}>\n                                            <div> City: </div>\n                                            {event.EventCity}\n                                        </Col>\n                                        <Col md={2}>\n                                            <div >State:</div>\n                                            {event.EventState}\n                                        <br/>\n                                        </Col>\n                                        <Col md={4}>\n                                            Category:\n                                            {event.Categories.map((e, i) => (\n                                            <div key={i}>{e.CategoryName}</div>\n                                            ))}\n                                        <br/>\n                                        </Col>\n                                        <Col md={2}>\n                                            <div className={styles.columnHeader}>Distance:</div>\n                                            {event.Categories.map((e, i) => (\n                                            <div key={i}>{e.Distance}</div>\n                                            ))}\n                                        <br/>\n                                        </Col>\n                                        <Col md={2}>\n                                          <button> <a href={event.EventUrl} target=\"_blank\" rel=\"noreferrer\"> Sign up </a> </button>\n                                        <br/>\n                                        </Col>\n                            </Row>\n                        ))}\n                </div>\n            </Container>\n        </div>\n    )\n};\n\nexport default NewRun;","/Users/ingridf/Documents/chase-runner/src/views/Stats.jsx",["106"],[],"import React, { useState, useEffect } from 'react';\nimport StatsPopup from './StatsPopup';\nimport useMapData from '../hooks/useMapData';\n\nconst Stats = () => {\n    const {\n        savedPlaces: marathonStats,\n        fetchSavedPlaces,\n    } = useMapData();\n\n    const [isPopupOpen, setPopupOpen] = useState(false);\n    \n    useEffect(() => {\n        fetchSavedPlaces();\n    }, [fetchSavedPlaces]);\n    \n    const handleOpenPopup = () => {\n        setPopupOpen(true);\n    };\n\n    const handleClosePopup = () =>{\n        setPopupOpen(false);\n    };\n\n    return (\n        <div onClick={handleOpenPopup}>\n            <StatsPopup marathonStats={marathonStats} onClose={handleClosePopup}/>\n        </div>\n    )\n};\n\nexport default Stats;","/Users/ingridf/Documents/chase-runner/src/hooks/useCurrentUser.js",[],[],"/Users/ingridf/Documents/chase-runner/src/components/SimpleMap.js",["107","108","109"],[],"import React, { useRef, useState } from \"react\";\n// import styles from '../styles/SimpleMap.module.css';\nimport image from '../image/pin.png';\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from 'leaflet';\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\n// import { useGeolocated } from \"react-geolocated\";\nimport nextId from 'react-id-generator';\n\nconst SimpleMap = () => {\n    // const mapRef = useRef();    \n    // const [state, setState] = useState({\n    //   lat: 40.72683,\n    //   lng:  -73.943512,\n    //   locations: [{ lat: 40, lng: -73, id: 'hi' }],\n    // });\n\n    // const markers= [\n    //   {\n    //     geocode: [48.86, 2.3522]\n    //   },\n    //   {\n    //     geocode: [48.85, 2.3522]\n    //   },\n    //   {\n    //     geocode: [48.855, 2.34]\n    //   }\n    // ];\n\n\n    // const { coords} =\n    // useGeolocated({\n    //     positionOptions: {\n    //         enableHighAccuracy: false,\n    //     },\n    //     userDecisionTimeout: 5000,\n    // });\n    // console.log(coords, \"coords\")\n\n  //   const handleClick = (event) => {\n\t// \tconsole.log('clicked');\n\t// \tconsole.log(event);\n\t// \tconst coords = event.latlng;\n\t// \tconsole.log(coords);\n\t// \tconst obj = {\n\t// \t\tlat: coords.lat,\n\t// \t\tlng: coords.lng,\n\t// \t\tid: nextId(),\n\t// \t};\n\t// \tconst locations = [...state.locations, obj];\n\t// \tsetState({ ...state, locations, lat: coords.lat, lng: coords.lng });\n\t// \tconsole.log(state);\n\t// };\n\n  // const findMe = () => {\n\t// \tnavigator.geolocation.getCurrentPosition((position) => {\n\t// \t\tconsole.log(position, 'pos');\n\t// \t\tsetState({\n\t// \t\t\t...state,\n\t// \t\t\tlat: position.coords.latitude,\n\t// \t\t\tlng: position.coords.longitude,\n\t// \t\t});\n\t// \t});\n\t// };\n\n\t// console.log(state);\n\n  const customIcon = new Icon({\n    iconUrl: image,\n    iconSize: [38, 38]\n  });\n\n    return ( \n      <div> \n      {/* // Make sure you set the height and width of the map container otherwise the map won't show */}\n        <MapContainer center={[48.8566, 2.356 ]} zoom={13} \n         style={{height: \"50vh\", width: \"50vw\"}} >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          /> \n          {/* {state.locations.length > 0 &&\n\t\t\t\t\tstate.locations.map((location) => ( */}\n          {/* {markers.map((marker) => (  */}\n        <MarkerClusterGroup> \n        \n\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\tposition={[48.86, 2.3522]}\n              icon={customIcon}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Popup>\n\t\t\t\t\t\t\t\tYou are here!\n\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t</Marker>\n        \n          </MarkerClusterGroup>\n          {/* ))} */}\n\t\t\t\t\t{/* ))} */}\n        </MapContainer>\n        </div>\n    );\n  };\n  \n  export default SimpleMap;","/Users/ingridf/Documents/chase-runner/src/hooks/useAuthStatus.js",[],[],"/Users/ingridf/Documents/chase-runner/src/views/Dashboard.jsx",["110","111"],[],"// import {useCurrentUser} from '../hooks/useCurrentUser.js';\nimport {useAuthStatus} from '../hooks/useAuthStatus';\nimport styles from '../styles/Dashboard.module.css';\nimport SimpleMap from '../components/SimpleMap';\nimport AddRun from \"./AddRun\";\nimport Map from './Map';\n\n\nconst Dashboard = () => {\n    const {isLoading, isAuthorized, username} = useAuthStatus();\n    // const {isLoading, isAuthorized, username} = useCurrentUser();\n\n\n    if (isLoading) {\n        return null;\n    }\n    const authorizedBody = \n    <>\n        Your username is: <b>{username}</b>\n    </>\n\n    const unauthorizedBody = \n    <>\n        You have not logged in and cannot view the dashboard.\n        <br/><br/>\n        <a href=\"/\" className={styles.link}>Login to continue.</a>\n    </>\n\n    return (\n        <div className={styles.dashboard}>\n            <div className={styles.title}>{isAuthorized ? 'Welcome!' : 'Unauthorized'}</div>\n            <div className={styles.message}>\n                { isAuthorized ? authorizedBody : unauthorizedBody }\n            </div>\n            {/* <SimpleMap /> */}\n            {/* <AddRun /> */}\n            <Map />\n\n        </div>\n    );\n\n}\n\nexport default Dashboard;","/Users/ingridf/Documents/chase-runner/src/views/Home.jsx",[],[],"/Users/ingridf/Documents/chase-runner/src/hooks/useGeoLocation.js",["112"],[],"/Users/ingridf/Documents/chase-runner/src/views/AddRun.jsx",["113","114","115","116","117"],[],"import { useState, useRef, useEffect } from \"react\";\nimport L from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\n// import { SearchControl,  OpenStreetMapProvider } from 'leaflet-search';\nimport image from '../image/pin.png';\nimport 'leaflet/dist/leaflet.css';\nimport styles from '../styles/NewRun.module.css';\n\nconst states = ['AL','AK','AZ','AR','CA','CO','CT','DE','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY'];\nconst eventTypes = ['5K', '10K', 'Marathon', 'Fun Run', 'Road', 'Trail']\n\nconst stateCoordinates = { \n    AL: { latitude: 32.806671, longitude: -86.791130 },\n    AK: { latitude: 61.370716, longitude: -152.404419 },\n    NY: { latitude: 40.7128, longitude: -74.0060 }, // Coordinates for New York (NY)\n    // { lat: 34.0522, lng: -118.2437 }, // Coordinates for Los Angeles (CA)\n    // ... Add coordinates for other states\n};\n\n\nconst AddRun = () => {\n    const [stateLocation, setStateLocation] = useState('');\n    const [marker, setMarker] = useState(null);\n\n\n    const handleSelectChange = (e) => {\n        e.preventDefault();\n      const selectedState = e.target.value;\n      setStateLocation(selectedState);\n      console.log(stateCoordinates[selectedState])\n      if (stateCoordinates[selectedState]) {\n          setMarker({ ...stateCoordinates[selectedState], city: selectedState });\n        }\n    };\n      \n    const defaultIcon = L.icon({\n      iconUrl: image, // Specify the path to your marker icon\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n    });\n  console.log(marker, 'marker')\n    return (\n      <div className={styles.newrunSearch}>\n        <form onSubmit={handleSelectChange}>\n          <label>\n            Select your State:\n            <select value={stateLocation} onChange={handleSelectChange}>\n              <option value=\"\">Select your State</option>\n              {states.map((state) => (\n                <option key={state} value={state}>\n                  {state}\n                </option>\n              ))}\n            </select>\n          </label>\n        </form>\n  \n  \n        <MapContainer center={[37.7749, -122.4194]} zoom={13} style={{ height: '400px', width: '100%' }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {marker && (\n            <Marker position={[marker.latitude, marker.longitude]} icon={defaultIcon}>\n              <Popup>{marker.city}</Popup>\n            </Marker>\n          )}\n\n        </MapContainer>\n     \n      </div>\n      )\n}\n\nexport default AddRun;","/Users/ingridf/Documents/chase-runner/src/views/SavedPinnedPlaces.jsx",["118"],[],"/Users/ingridf/Documents/chase-runner/src/components/Banner.js",["119","120","121"],[],"import React, { useState } from 'react';\nimport styles from '../styles/Banner.module.css';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\nconst Banner = () => {\n\n    const [isPopupOpen, setPopupOpen] = useState(false);\n    \n    const handleOpenPopup = () => {\n        setPopupOpen(true);\n    };\n    return ( \n        <div className={styles.mainHeader}>\n            <div className={styles.projectLogo}></div>\n            <div className={styles.headerText}>CHASE RUNNER</div>\n            <div className={styles.spacer}></div>\n            {/* <div className={styles.btns}> */}\n                {/* <Button variant=\"light\" onClick={handleOpenPopup}>\n                    <a href=\"/stats\">STATS</a>\n                </Button>\n                <Button variant=\"light\">\n                    <a href=\"/newrun\">NEW RUN</a>\n                </Button>\n                <Button variant=\"light\">\n                    <a href=\"/goals\">GOALS</a>\n                </Button> */}\n            {/* </div> */}\n            <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" style={{borderStyle:'none', backgroundColor:'white', borderRadius:'0', width: 'auto'}}>\n                <div className={styles.imageProfile}></div>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                <Dropdown.Item href=\"/logout\">Logout</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    );\n}\nexport default Banner;","/Users/ingridf/Documents/chase-runner/src/views/SearchFilter.jsx",[],[],"/Users/ingridf/Documents/chase-runner/src/views/Map.jsx",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],[],"/Users/ingridf/Documents/chase-runner/src/hooks/useMapData.js",["139","140","141","142","143","144"],[],"/Users/ingridf/Documents/chase-runner/src/views/StatsPopup.jsx",["145","146"],[],"import React, { useState, useEffect } from 'react';\n\nconst StatsPopup = ({onClose, marathonStats}) => {\n    const[count, setCount] = useState({});\n\n    useEffect(() => {\n        const counts = marathonStats.reduce((acc, entry) => {\n            const country = entry.country;\n            if(country) {\n                acc[country] = (acc[country] || 0) + 1;\n            }\n\n            return acc;\n        }, {})\n        setCount(count);\n    }, [marathonStats]);\n\n    const country = marathonStats.map((e,index) =>(\n        e.country !== null && (\n            <li key={index}>\n            {e.country}\n            </li>\n        )\n    ));\n\n    return(\n        <div>\n            <div>\n                <button onClick={onClose}>X</button>\n                <h2>Your Stats</h2>\n                        {country}\n            </div>\n        </div>\n    )\n};\n\nexport default StatsPopup;",{"ruleId":"147","severity":1,"message":"148","line":1,"column":20,"nodeType":"149","messageId":"150","endLine":1,"endColumn":29},{"ruleId":"147","severity":1,"message":"151","line":11,"column":12,"nodeType":"149","messageId":"150","endLine":11,"endColumn":23},{"ruleId":"147","severity":1,"message":"152","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":23},{"ruleId":"147","severity":1,"message":"153","line":1,"column":25,"nodeType":"149","messageId":"150","endLine":1,"endColumn":33},{"ruleId":"147","severity":1,"message":"154","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":14},{"ruleId":"147","severity":1,"message":"155","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":17},{"ruleId":"147","severity":1,"message":"156","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"147","severity":1,"message":"157","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":13},{"ruleId":"147","severity":1,"message":"152","line":1,"column":20,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":37},{"ruleId":"147","severity":1,"message":"158","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":26},{"ruleId":"147","severity":1,"message":"159","line":4,"column":28,"nodeType":"149","messageId":"150","endLine":4,"endColumn":49},{"ruleId":"147","severity":1,"message":"160","line":11,"column":7,"nodeType":"149","messageId":"150","endLine":11,"endColumn":17},{"ruleId":"147","severity":1,"message":"161","line":28,"column":13,"nodeType":"149","messageId":"150","endLine":28,"endColumn":19},{"ruleId":"147","severity":1,"message":"162","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":14},{"ruleId":"147","severity":1,"message":"151","line":9,"column":12,"nodeType":"149","messageId":"150","endLine":9,"endColumn":23},{"ruleId":"147","severity":1,"message":"163","line":11,"column":11,"nodeType":"149","messageId":"150","endLine":11,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"152","line":1,"column":38,"nodeType":"149","messageId":"150","endLine":1,"endColumn":44},{"ruleId":"147","severity":1,"message":"164","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"165","line":17,"column":5,"nodeType":"149","messageId":"150","endLine":17,"endColumn":17},{"ruleId":"147","severity":1,"message":"166","line":19,"column":5,"nodeType":"149","messageId":"150","endLine":19,"endColumn":12},{"ruleId":"147","severity":1,"message":"167","line":20,"column":5,"nodeType":"149","messageId":"150","endLine":20,"endColumn":15},{"ruleId":"147","severity":1,"message":"168","line":25,"column":5,"nodeType":"149","messageId":"150","endLine":25,"endColumn":22},{"ruleId":"147","severity":1,"message":"169","line":26,"column":5,"nodeType":"149","messageId":"150","endLine":26,"endColumn":17},{"ruleId":"147","severity":1,"message":"170","line":27,"column":5,"nodeType":"149","messageId":"150","endLine":27,"endColumn":16},{"ruleId":"147","severity":1,"message":"171","line":28,"column":5,"nodeType":"149","messageId":"150","endLine":28,"endColumn":18},{"ruleId":"147","severity":1,"message":"172","line":29,"column":5,"nodeType":"149","messageId":"150","endLine":29,"endColumn":22},{"ruleId":"147","severity":1,"message":"173","line":30,"column":5,"nodeType":"149","messageId":"150","endLine":30,"endColumn":19},{"ruleId":"147","severity":1,"message":"174","line":31,"column":5,"nodeType":"149","messageId":"150","endLine":31,"endColumn":26},{"ruleId":"147","severity":1,"message":"175","line":32,"column":5,"nodeType":"149","messageId":"150","endLine":32,"endColumn":22},{"ruleId":"147","severity":1,"message":"176","line":33,"column":5,"nodeType":"149","messageId":"150","endLine":33,"endColumn":21},{"ruleId":"147","severity":1,"message":"177","line":35,"column":5,"nodeType":"149","messageId":"150","endLine":35,"endColumn":23},{"ruleId":"147","severity":1,"message":"178","line":38,"column":10,"nodeType":"149","messageId":"150","endLine":38,"endColumn":22},{"ruleId":"147","severity":1,"message":"179","line":6,"column":29,"nodeType":"149","messageId":"150","endLine":6,"endColumn":47},{"ruleId":"147","severity":1,"message":"180","line":7,"column":23,"nodeType":"149","messageId":"150","endLine":7,"endColumn":35},{"ruleId":"147","severity":1,"message":"181","line":9,"column":26,"nodeType":"149","messageId":"150","endLine":9,"endColumn":41},{"ruleId":"147","severity":1,"message":"175","line":12,"column":12,"nodeType":"149","messageId":"150","endLine":12,"endColumn":29},{"ruleId":"147","severity":1,"message":"182","line":12,"column":31,"nodeType":"149","messageId":"150","endLine":12,"endColumn":51},{"ruleId":"147","severity":1,"message":"183","line":132,"column":11,"nodeType":"149","messageId":"150","endLine":132,"endColumn":26},{"ruleId":"147","severity":1,"message":"184","line":7,"column":15,"nodeType":"149","messageId":"150","endLine":7,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":16,"column":8,"nodeType":"187","endLine":16,"endColumn":23,"suggestions":"188"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isPopupOpen' is assigned a value but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'nextId' is defined but never used.","'SimpleMap' is defined but never used.","'AddRun' is defined but never used.","'React' is defined but never used.","'GeoSearchControl' is defined but never used.","'OpenStreetMapProvider' is defined but never used.","'eventTypes' is assigned a value but never used.","'marker' is assigned a value but never used.","'Button' is defined but never used.","'handleOpenPopup' is assigned a value but never used.","'Select' is defined but never used.","'selectedCity' is assigned a value but never used.","'country' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'handleInputSearch' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'suggestions' is assigned a value but never used.","'handleKeyDown' is assigned a value but never used.","'saveCityToBackend' is assigned a value but never used.","'setSuggestions' is assigned a value but never used.","'handleSuggestionClick' is assigned a value but never used.","'selectedCityIndex' is assigned a value but never used.","'handleCitySearch' is assigned a value but never used.","'fetchCitiesFromAPI' is assigned a value but never used.","'filteredData' is assigned a value but never used.","'setCityCoordinates' is assigned a value but never used.","'setMapCenter' is assigned a value but never used.","'setShowConfetti' is assigned a value but never used.","'setSelectedCityIndex' is assigned a value but never used.","'extractCityInfo' is assigned a value but never used.","'counts' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.","ArrayExpression",["189"],{"desc":"190","fix":"191"},"Update the dependencies array to be: [count, marathonStats]",{"range":"192","text":"193"},[443,458],"[count, marathonStats]"]