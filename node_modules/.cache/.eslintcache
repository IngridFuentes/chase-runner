[{"/Users/ingridf/Documents/chase-runner/src/index.js":"1","/Users/ingridf/Documents/chase-runner/src/App.js":"2","/Users/ingridf/Documents/chase-runner/src/components/banner.js":"3","/Users/ingridf/Documents/chase-runner/src/views/Goals.jsx":"4","/Users/ingridf/Documents/chase-runner/src/views/NewRun.jsx":"5","/Users/ingridf/Documents/chase-runner/src/views/Stats.jsx":"6","/Users/ingridf/Documents/chase-runner/src/hooks/useCurrentUser.js":"7","/Users/ingridf/Documents/chase-runner/src/components/SimpleMap.js":"8","/Users/ingridf/Documents/chase-runner/src/hooks/useAuthStatus.js":"9","/Users/ingridf/Documents/chase-runner/src/views/Dashboard.jsx":"10","/Users/ingridf/Documents/chase-runner/src/views/Home.jsx":"11","/Users/ingridf/Documents/chase-runner/src/hooks/useGeoLocation.js":"12","/Users/ingridf/Documents/chase-runner/src/views/AddRun.jsx":"13","/Users/ingridf/Documents/chase-runner/src/views/SavedPinnedPlaces.jsx":"14","/Users/ingridf/Documents/chase-runner/src/components/Banner.js":"15","/Users/ingridf/Documents/chase-runner/src/views/SearchFilter.jsx":"16","/Users/ingridf/Documents/chase-runner/src/views/Map.jsx":"17","/Users/ingridf/Documents/chase-runner/src/hooks/useMapData.js":"18","/Users/ingridf/Documents/chase-runner/src/views/StatsPopup.jsx":"19","/Users/ingridf/Documents/chase-runner/src/views/Login.jsx":"20","/Users/ingridf/Documents/chase-runner/src/views/Profile.jsx":"21","/Users/ingridf/Documents/chase-runner/src/components/LogoutButton.js":"22","/Users/ingridf/Documents/chase-runner/src/hooks/index.js":"23","/Users/ingridf/Documents/chase-runner/src/hooks/usePassageLogout.js":"24","/Users/ingridf/Documents/chase-runner/src/hooks/usePassageUserInfo.js":"25"},{"size":259,"mtime":1699420845344,"results":"26","hashOfConfig":"27"},{"size":1480,"mtime":1703119449292,"results":"28","hashOfConfig":"27"},{"size":1266,"mtime":1699418653741,"results":"29","hashOfConfig":"27"},{"size":92,"mtime":1698030524612,"results":"30","hashOfConfig":"27"},{"size":3951,"mtime":1699642167732,"results":"31","hashOfConfig":"27"},{"size":729,"mtime":1699665057591,"results":"32","hashOfConfig":"27"},{"size":1106,"mtime":1698704390175,"results":"33","hashOfConfig":"27"},{"size":2784,"mtime":1698779897878,"results":"34","hashOfConfig":"27"},{"size":1249,"mtime":1697917604270,"results":"35","hashOfConfig":"27"},{"size":2928,"mtime":1704326339496,"results":"36","hashOfConfig":"27"},{"size":732,"mtime":1703018317333,"results":"37","hashOfConfig":"27"},{"size":1011,"mtime":1698764996550,"results":"38","hashOfConfig":"27"},{"size":2911,"mtime":1699387872495,"results":"39","hashOfConfig":"27"},{"size":991,"mtime":1699244648591,"results":"40","hashOfConfig":"27"},{"size":1499,"mtime":1702517169546,"results":"41","hashOfConfig":"27"},{"size":379,"mtime":1699595282546,"results":"42","hashOfConfig":"27"},{"size":10072,"mtime":1708372954823,"results":"43","hashOfConfig":"44"},{"size":10342,"mtime":1705016363976,"results":"45","hashOfConfig":"27"},{"size":873,"mtime":1699667709989,"results":"46","hashOfConfig":"27"},{"size":899,"mtime":1704327015295,"results":"47","hashOfConfig":"27"},{"size":241,"mtime":1703018491976,"results":"48","hashOfConfig":"27"},{"size":1199,"mtime":1703119393388,"results":"49","hashOfConfig":"27"},{"size":73,"mtime":1703008093214,"results":"50","hashOfConfig":"27"},{"size":541,"mtime":1703027167059,"results":"51","hashOfConfig":"27"},{"size":2262,"mtime":1703119677687,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"jvtu1t",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"97uu08",{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"56"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ingridf/Documents/chase-runner/src/index.js",[],[],[],"/Users/ingridf/Documents/chase-runner/src/App.js",["137","138","139"],[],"import React from \"react\";\nimport { Routes, Route } from 'react-router-dom';\nimport { PassageProvider } from \"@passageidentity/passage-react\";\n\nimport Home from \"./views/Home\";\nimport Dashboard from \"./views/Dashboard\";\nimport Banner from \"./components/Banner\";\nimport styles from './styles/App.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NewRun from \"./views/NewRun\";\nimport Stats from \"./views/Stats\";\nimport Goals from \"./views/Goals\";\nimport Login from \"./views/Login\";\nimport Profile from \"./views/Profile\";\n\nfunction App() {\n    return (\n        // <PassageProvider appId={process.env.REACT_APP_PASSAGE_APP_ID}>\n            <div>\n              {/* <Banner/> */}\n              <div className={styles.mainContainer} >\n                  <Routes>\n                      <Route path=\"/\" element={<Login/>}></Route>\n                      <Route path=\"/login\" element={<Home/>}></Route>\n                      {/* <Route path=\"/profile\" element={<Profile/>}></Route> */}\n                      <Route path=\"/dashboard\" element={<Dashboard/>}></Route>\n                      <Route path=\"/newrun\" element={<NewRun/>}></Route>\n                      <Route path=\"/stats\" element={<Stats/>}></Route>\n                      <Route path=\"/goals\" element={<Goals/>}></Route>\n                  </Routes>\n              </div>\n              <div className={styles.footer}>\n              </div>\n            </div>\n    //   </PassageProvider>\n    );\n  }\n\nexport default App;\n","/Users/ingridf/Documents/chase-runner/src/components/banner.js",[],[],"/Users/ingridf/Documents/chase-runner/src/views/Goals.jsx",[],[],"/Users/ingridf/Documents/chase-runner/src/views/NewRun.jsx",["140"],[],"import { useState, useEffect } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport styles from '../styles/NewRun.module.css';\nimport SearchFilter from \"./SearchFilter\";\nimport { Link } from 'react-router-dom';\n\n\nconst NewRun = () => {\n    const [race, setRace] = useState([]);\n    const [buttonClicked, setButtonClicked] = useState(false);\n    const [searchText, setSearchText] = useState('');\n    // const [stateLocation, setStateLocation] = useState(\"\");\n    // const [eventType, setEventType] = useState(\"\");\n\n    const fetchEventData = async () => {\n        try {\n            const response = await fetch('http://www.RunReg.com/api/search/', {\n            }, {\n                mode: \"no-cors\"\n            })\n            const data = await response.json();\n            setRace(data.MatchingEvents || []);\n            console.log(data.MatchingEvents, 'data')\n        } catch (error) {\n            console.error(error);\n        }\n    };\n// console.log(fetchEventData(), 'fetch')\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetchEventData();\n        setButtonClicked(true);\n    };\n\n    const handleSearchChange = (text) => {\n        setSearchText(text);\n        const filteredData = race.filter((event) => event.EventState.toLowerCase().includes(text.toLowerCase()))\n        setRace(filteredData)\n    };\n\n    return (\n        <div className={styles.newrunSearch}>\n            <Link to=\"/dashboard\"className={styles.link}>Go to dashboard</Link>\n            { !buttonClicked && ( \n            <form onSubmit={handleSubmit}>\n                <label>\n                    <button type=\"submit\">Show List of Runs</button>\n                </label>\n            </form>\n            )}\n            {buttonClicked && (\n            <SearchFilter value={searchText} onChange={handleSearchChange}/>\n            )}\n            <Container>\n                <div className={styles.results}>\n                        {race.map((event, index) => (\n                                // console.log(event.EventCity, \"e\")\n                            <Row key={index}> \n                                        <Col md={2}>\n                                            <div> City: </div>\n                                            {event.EventCity}\n                                        </Col>\n                                        <Col md={2}>\n                                            <div >State:</div>\n                                            {event.EventState}\n                                        <br/>\n                                        </Col>\n                                        <Col md={4}>\n                                            Category:\n                                            {event.Categories.map((e, i) => (\n                                            <div key={i}>{e.CategoryName}</div>\n                                            ))}\n                                        <br/>\n                                        </Col>\n                                        <Col md={2}>\n                                            <div className={styles.columnHeader}>Distance:</div>\n                                            {event.Categories.map((e, i) => (\n                                            <div key={i}>{e.Distance}</div>\n                                            ))}\n                                        <br/>\n                                        </Col>\n                                        <Col md={2}>\n                                          <button> <a href={event.EventUrl} target=\"_blank\" rel=\"noreferrer\"> Sign up </a> </button>\n                                        <br/>\n                                        </Col>\n                            </Row>\n                        ))}\n                </div>\n            </Container>\n        </div>\n    )\n};\n\nexport default NewRun;","/Users/ingridf/Documents/chase-runner/src/views/Stats.jsx",["141"],[],"import React, { useState, useEffect } from 'react';\nimport StatsPopup from './StatsPopup';\nimport useMapData from '../hooks/useMapData';\n\nconst Stats = () => {\n    const {\n        savedPlaces: marathonStats,\n        fetchSavedPlaces,\n    } = useMapData();\n\n    const [isPopupOpen, setPopupOpen] = useState(false);\n    \n    useEffect(() => {\n        fetchSavedPlaces();\n    }, [fetchSavedPlaces]);\n    \n    const handleOpenPopup = () => {\n        setPopupOpen(true);\n    };\n\n    const handleClosePopup = () =>{\n        setPopupOpen(false);\n    };\n\n    return (\n        <div onClick={handleOpenPopup}>\n            <StatsPopup marathonStats={marathonStats} onClose={handleClosePopup}/>\n        </div>\n    )\n};\n\nexport default Stats;","/Users/ingridf/Documents/chase-runner/src/hooks/useCurrentUser.js",[],[],"/Users/ingridf/Documents/chase-runner/src/components/SimpleMap.js",["142","143","144"],[],"import React, { useRef, useState } from \"react\";\n// import styles from '../styles/SimpleMap.module.css';\nimport image from '../image/pin.png';\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from 'leaflet';\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\n// import { useGeolocated } from \"react-geolocated\";\nimport nextId from 'react-id-generator';\n\nconst SimpleMap = () => {\n    // const mapRef = useRef();    \n    // const [state, setState] = useState({\n    //   lat: 40.72683,\n    //   lng:  -73.943512,\n    //   locations: [{ lat: 40, lng: -73, id: 'hi' }],\n    // });\n\n    // const markers= [\n    //   {\n    //     geocode: [48.86, 2.3522]\n    //   },\n    //   {\n    //     geocode: [48.85, 2.3522]\n    //   },\n    //   {\n    //     geocode: [48.855, 2.34]\n    //   }\n    // ];\n\n\n    // const { coords} =\n    // useGeolocated({\n    //     positionOptions: {\n    //         enableHighAccuracy: false,\n    //     },\n    //     userDecisionTimeout: 5000,\n    // });\n    // console.log(coords, \"coords\")\n\n  //   const handleClick = (event) => {\n\t// \tconsole.log('clicked');\n\t// \tconsole.log(event);\n\t// \tconst coords = event.latlng;\n\t// \tconsole.log(coords);\n\t// \tconst obj = {\n\t// \t\tlat: coords.lat,\n\t// \t\tlng: coords.lng,\n\t// \t\tid: nextId(),\n\t// \t};\n\t// \tconst locations = [...state.locations, obj];\n\t// \tsetState({ ...state, locations, lat: coords.lat, lng: coords.lng });\n\t// \tconsole.log(state);\n\t// };\n\n  // const findMe = () => {\n\t// \tnavigator.geolocation.getCurrentPosition((position) => {\n\t// \t\tconsole.log(position, 'pos');\n\t// \t\tsetState({\n\t// \t\t\t...state,\n\t// \t\t\tlat: position.coords.latitude,\n\t// \t\t\tlng: position.coords.longitude,\n\t// \t\t});\n\t// \t});\n\t// };\n\n\t// console.log(state);\n\n  const customIcon = new Icon({\n    iconUrl: image,\n    iconSize: [38, 38]\n  });\n\n    return ( \n      <div> \n      {/* // Make sure you set the height and width of the map container otherwise the map won't show */}\n        <MapContainer center={[48.8566, 2.356 ]} zoom={13} \n         style={{height: \"50vh\", width: \"50vw\"}} >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          /> \n          {/* {state.locations.length > 0 &&\n\t\t\t\t\tstate.locations.map((location) => ( */}\n          {/* {markers.map((marker) => (  */}\n        <MarkerClusterGroup> \n        \n\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\tposition={[48.86, 2.3522]}\n              icon={customIcon}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Popup>\n\t\t\t\t\t\t\t\tYou are here!\n\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t</Marker>\n        \n          </MarkerClusterGroup>\n          {/* ))} */}\n\t\t\t\t\t{/* ))} */}\n        </MapContainer>\n        </div>\n    );\n  };\n  \n  export default SimpleMap;",[],"/Users/ingridf/Documents/chase-runner/src/hooks/useAuthStatus.js",[],[],"/Users/ingridf/Documents/chase-runner/src/views/Dashboard.jsx",["145","146"],[],"/Users/ingridf/Documents/chase-runner/src/views/Home.jsx",[],[],"/Users/ingridf/Documents/chase-runner/src/hooks/useGeoLocation.js",["147"],[],"/Users/ingridf/Documents/chase-runner/src/views/AddRun.jsx",["148","149","150","151","152"],[],"import { useState, useRef, useEffect } from \"react\";\nimport L from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\n// import { SearchControl,  OpenStreetMapProvider } from 'leaflet-search';\nimport image from '../image/pin.png';\nimport 'leaflet/dist/leaflet.css';\nimport styles from '../styles/NewRun.module.css';\n\nconst states = ['AL','AK','AZ','AR','CA','CO','CT','DE','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY'];\nconst eventTypes = ['5K', '10K', 'Marathon', 'Fun Run', 'Road', 'Trail']\n\nconst stateCoordinates = { \n    AL: { latitude: 32.806671, longitude: -86.791130 },\n    AK: { latitude: 61.370716, longitude: -152.404419 },\n    NY: { latitude: 40.7128, longitude: -74.0060 }, // Coordinates for New York (NY)\n    // { lat: 34.0522, lng: -118.2437 }, // Coordinates for Los Angeles (CA)\n    // ... Add coordinates for other states\n};\n\n\nconst AddRun = () => {\n    const [stateLocation, setStateLocation] = useState('');\n    const [marker, setMarker] = useState(null);\n\n\n    const handleSelectChange = (e) => {\n        e.preventDefault();\n      const selectedState = e.target.value;\n      setStateLocation(selectedState);\n      console.log(stateCoordinates[selectedState])\n      if (stateCoordinates[selectedState]) {\n          setMarker({ ...stateCoordinates[selectedState], city: selectedState });\n        }\n    };\n      \n    const defaultIcon = L.icon({\n      iconUrl: image, // Specify the path to your marker icon\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n    });\n  console.log(marker, 'marker')\n    return (\n      <div className={styles.newrunSearch}>\n        <form onSubmit={handleSelectChange}>\n          <label>\n            Select your State:\n            <select value={stateLocation} onChange={handleSelectChange}>\n              <option value=\"\">Select your State</option>\n              {states.map((state) => (\n                <option key={state} value={state}>\n                  {state}\n                </option>\n              ))}\n            </select>\n          </label>\n        </form>\n  \n  \n        <MapContainer center={[37.7749, -122.4194]} zoom={13} style={{ height: '400px', width: '100%' }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {marker && (\n            <Marker position={[marker.latitude, marker.longitude]} icon={defaultIcon}>\n              <Popup>{marker.city}</Popup>\n            </Marker>\n          )}\n\n        </MapContainer>\n     \n      </div>\n      )\n}\n\nexport default AddRun;","/Users/ingridf/Documents/chase-runner/src/views/SavedPinnedPlaces.jsx",["153"],[],"/Users/ingridf/Documents/chase-runner/src/components/Banner.js",["154","155","156"],[],"import React, { useState } from 'react';\nimport styles from '../styles/Banner.module.css';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\nconst Banner = () => {\n\n    const [isPopupOpen, setPopupOpen] = useState(false);\n    \n    const handleOpenPopup = () => {\n        setPopupOpen(true);\n    };\n    return ( \n        <div className={styles.mainHeader}>\n            <div className={styles.projectLogo}></div>\n            <div className={styles.headerImage}></div>\n            <div className={styles.spacer}></div>\n            {/* <div className={styles.btns}> */}\n                {/* <Button variant=\"light\" onClick={handleOpenPopup}>\n                    <a href=\"/stats\">STATS</a>\n                </Button>\n                <Button variant=\"light\">\n                    <a href=\"/newrun\">NEW RUN</a>\n                </Button>\n                <Button variant=\"light\">\n                    <a href=\"/goals\">GOALS</a>\n                </Button> */}\n            {/* </div> */}\n            <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" style={{borderStyle:'none', backgroundColor:'white', borderRadius:'0', width: 'auto'}}>\n                <div className={styles.imageProfile}></div>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                <Dropdown.Item href=\"/logout\">Logout</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    );\n}\nexport default Banner;","/Users/ingridf/Documents/chase-runner/src/views/SearchFilter.jsx",[],[],"/Users/ingridf/Documents/chase-runner/src/views/Map.jsx",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],[],"/Users/ingridf/Documents/chase-runner/src/hooks/useMapData.js",["176","177","178","179","180","181"],[],"/Users/ingridf/Documents/chase-runner/src/views/StatsPopup.jsx",["182","183"],[],"import React, { useState, useEffect } from 'react';\n\nconst StatsPopup = ({onClose, marathonStats}) => {\n    const[count, setCount] = useState({});\n\n    useEffect(() => {\n        const counts = marathonStats.reduce((acc, entry) => {\n            const country = entry.country;\n            if(country) {\n                acc[country] = (acc[country] || 0) + 1;\n            }\n\n            return acc;\n        }, {})\n        setCount(count);\n    }, [marathonStats]);\n\n    const country = marathonStats.map((e,index) =>(\n        e.country !== null && (\n            <li key={index}>\n            {e.country}\n            </li>\n        )\n    ));\n\n    return(\n        <div>\n            <div>\n                <button onClick={onClose}>X</button>\n                <h2>Your Stats</h2>\n                        {country}\n            </div>\n        </div>\n    )\n};\n\nexport default StatsPopup;","/Users/ingridf/Documents/chase-runner/src/views/Login.jsx",[],[],"/Users/ingridf/Documents/chase-runner/src/views/Profile.jsx",[],[],"/Users/ingridf/Documents/chase-runner/src/components/LogoutButton.js",[],[],"/Users/ingridf/Documents/chase-runner/src/hooks/index.js",[],[],"/Users/ingridf/Documents/chase-runner/src/hooks/usePassageLogout.js",[],[],"/Users/ingridf/Documents/chase-runner/src/hooks/usePassageUserInfo.js",["184"],[],{"ruleId":"185","severity":1,"message":"186","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":25},{"ruleId":"185","severity":1,"message":"189","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"185","severity":1,"message":"190","line":14,"column":8,"nodeType":"187","messageId":"188","endLine":14,"endColumn":15},{"ruleId":"185","severity":1,"message":"191","line":1,"column":20,"nodeType":"187","messageId":"188","endLine":1,"endColumn":29},{"ruleId":"185","severity":1,"message":"192","line":11,"column":12,"nodeType":"187","messageId":"188","endLine":11,"endColumn":23},{"ruleId":"185","severity":1,"message":"193","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":23},{"ruleId":"185","severity":1,"message":"194","line":1,"column":25,"nodeType":"187","messageId":"188","endLine":1,"endColumn":33},{"ruleId":"185","severity":1,"message":"195","line":8,"column":8,"nodeType":"187","messageId":"188","endLine":8,"endColumn":14},{"ruleId":"185","severity":1,"message":"196","line":2,"column":9,"nodeType":"187","messageId":"188","endLine":2,"endColumn":23},{"ruleId":"185","severity":1,"message":"197","line":10,"column":37,"nodeType":"187","messageId":"188","endLine":10,"endColumn":45},{"ruleId":"185","severity":1,"message":"198","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":13},{"ruleId":"185","severity":1,"message":"193","line":1,"column":20,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"191","line":1,"column":28,"nodeType":"187","messageId":"188","endLine":1,"endColumn":37},{"ruleId":"185","severity":1,"message":"199","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":26},{"ruleId":"185","severity":1,"message":"200","line":4,"column":28,"nodeType":"187","messageId":"188","endLine":4,"endColumn":49},{"ruleId":"185","severity":1,"message":"201","line":11,"column":7,"nodeType":"187","messageId":"188","endLine":11,"endColumn":17},{"ruleId":"185","severity":1,"message":"202","line":28,"column":13,"nodeType":"187","messageId":"188","endLine":28,"endColumn":19},{"ruleId":"185","severity":1,"message":"203","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"192","line":9,"column":12,"nodeType":"187","messageId":"188","endLine":9,"endColumn":23},{"ruleId":"185","severity":1,"message":"204","line":11,"column":11,"nodeType":"187","messageId":"188","endLine":11,"endColumn":26},{"ruleId":"185","severity":1,"message":"191","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"193","line":1,"column":38,"nodeType":"187","messageId":"188","endLine":1,"endColumn":44},{"ruleId":"185","severity":1,"message":"205","line":3,"column":50,"nodeType":"187","messageId":"188","endLine":3,"endColumn":57},{"ruleId":"185","severity":1,"message":"206","line":23,"column":5,"nodeType":"187","messageId":"188","endLine":23,"endColumn":17},{"ruleId":"185","severity":1,"message":"207","line":25,"column":5,"nodeType":"187","messageId":"188","endLine":25,"endColumn":12},{"ruleId":"185","severity":1,"message":"208","line":26,"column":5,"nodeType":"187","messageId":"188","endLine":26,"endColumn":15},{"ruleId":"185","severity":1,"message":"209","line":31,"column":5,"nodeType":"187","messageId":"188","endLine":31,"endColumn":22},{"ruleId":"185","severity":1,"message":"210","line":32,"column":5,"nodeType":"187","messageId":"188","endLine":32,"endColumn":17},{"ruleId":"185","severity":1,"message":"211","line":33,"column":5,"nodeType":"187","messageId":"188","endLine":33,"endColumn":16},{"ruleId":"185","severity":1,"message":"212","line":34,"column":5,"nodeType":"187","messageId":"188","endLine":34,"endColumn":18},{"ruleId":"185","severity":1,"message":"213","line":35,"column":5,"nodeType":"187","messageId":"188","endLine":35,"endColumn":22},{"ruleId":"185","severity":1,"message":"214","line":36,"column":5,"nodeType":"187","messageId":"188","endLine":36,"endColumn":19},{"ruleId":"185","severity":1,"message":"215","line":37,"column":5,"nodeType":"187","messageId":"188","endLine":37,"endColumn":26},{"ruleId":"185","severity":1,"message":"216","line":38,"column":5,"nodeType":"187","messageId":"188","endLine":38,"endColumn":22},{"ruleId":"185","severity":1,"message":"217","line":39,"column":5,"nodeType":"187","messageId":"188","endLine":39,"endColumn":21},{"ruleId":"185","severity":1,"message":"218","line":41,"column":5,"nodeType":"187","messageId":"188","endLine":41,"endColumn":12},{"ruleId":"185","severity":1,"message":"219","line":43,"column":5,"nodeType":"187","messageId":"188","endLine":43,"endColumn":23},{"ruleId":"185","severity":1,"message":"220","line":46,"column":10,"nodeType":"187","messageId":"188","endLine":46,"endColumn":22},{"ruleId":"185","severity":1,"message":"221","line":51,"column":10,"nodeType":"187","messageId":"188","endLine":51,"endColumn":26},{"ruleId":"185","severity":1,"message":"222","line":6,"column":29,"nodeType":"187","messageId":"188","endLine":6,"endColumn":47},{"ruleId":"185","severity":1,"message":"223","line":7,"column":23,"nodeType":"187","messageId":"188","endLine":7,"endColumn":35},{"ruleId":"185","severity":1,"message":"224","line":9,"column":26,"nodeType":"187","messageId":"188","endLine":9,"endColumn":41},{"ruleId":"185","severity":1,"message":"216","line":12,"column":12,"nodeType":"187","messageId":"188","endLine":12,"endColumn":29},{"ruleId":"185","severity":1,"message":"225","line":12,"column":31,"nodeType":"187","messageId":"188","endLine":12,"endColumn":51},{"ruleId":"185","severity":1,"message":"226","line":132,"column":11,"nodeType":"187","messageId":"188","endLine":132,"endColumn":26},{"ruleId":"185","severity":1,"message":"227","line":7,"column":15,"nodeType":"187","messageId":"188","endLine":7,"endColumn":21},{"ruleId":"228","severity":1,"message":"229","line":16,"column":8,"nodeType":"230","endLine":16,"endColumn":23,"suggestions":"231"},{"ruleId":"228","severity":1,"message":"232","line":80,"column":6,"nodeType":"230","endLine":80,"endColumn":22,"suggestions":"233"},"no-unused-vars","'PassageProvider' is defined but never used.","Identifier","unusedVar","'Banner' is defined but never used.","'Profile' is defined but never used.","'useEffect' is defined but never used.","'isPopupOpen' is assigned a value but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'nextId' is defined but never used.","'useCurrentUser' is defined but never used.","'username' is assigned a value but never used.","'React' is defined but never used.","'GeoSearchControl' is defined but never used.","'OpenStreetMapProvider' is defined but never used.","'eventTypes' is assigned a value but never used.","'marker' is assigned a value but never used.","'Button' is defined but never used.","'handleOpenPopup' is assigned a value but never used.","'GeoJSON' is defined but never used.","'selectedCity' is assigned a value but never used.","'country' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'handleInputSearch' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'suggestions' is assigned a value but never used.","'handleKeyDown' is assigned a value but never used.","'saveCityToBackend' is assigned a value but never used.","'setSuggestions' is assigned a value but never used.","'handleSuggestionClick' is assigned a value but never used.","'selectedCityIndex' is assigned a value but never used.","'handleCitySearch' is assigned a value but never used.","'setData' is assigned a value but never used.","'fetchCitiesFromAPI' is assigned a value but never used.","'filteredData' is assigned a value but never used.","'selectedRaceType' is assigned a value but never used.","'setCityCoordinates' is assigned a value but never used.","'setMapCenter' is assigned a value but never used.","'setShowConfetti' is assigned a value but never used.","'setSelectedCityIndex' is assigned a value but never used.","'extractCityInfo' is assigned a value but never used.","'counts' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.","ArrayExpression",["234"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["235"],{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [count, marathonStats]",{"range":"240","text":"241"},"Update the dependencies array to be: [getCurrentUser, user]",{"range":"242","text":"243"},[443,458],"[count, marathonStats]",[2150,2166],"[getCurrentUser, user]"]