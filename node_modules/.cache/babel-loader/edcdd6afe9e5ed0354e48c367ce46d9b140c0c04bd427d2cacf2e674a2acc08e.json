{"ast":null,"code":"var _jsxFileName = \"/Users/ingridf/Documents/chase-runner/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport MediaQuery from 'react-responsive';\nimport Home from './components/Home.js';\nimport Login from './components/Login.js';\nimport { getCurrentUser } from './actions/currentUser.js';\nimport { fetchRuns } from './actions/fetchRuns';\nimport NavBar from './components/NavBar.js';\nimport RunsContainer from './containers/RunsContainer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(loggedIn);\n  const handleLogin = () => {\n    // Simulating a login action\n    setIsLoggedIn(true);\n  };\n  const handleLogout = () => {\n    // Simulating a logout action\n    setIsLoggedIn(false);\n  };\n  useEffect(() => {\n    props.getCurrentUser();\n    props.fetchRuns();\n  }, [props]);\n\n  // const { loggedIn,  runs } = props\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/profile\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(RunsContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1mvIzY1o7npd12VcVN2uQbKWxCY=\");\n_c = App;\nconst mapStateToProps = state => {\n  return {\n    loggedIn: !!state.currentUserReducer,\n    runs: state.runsReducer\n  };\n};\nexport default connect(mapStateToProps, {\n  getCurrentUser,\n  fetchRuns\n})(App);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","connect","BrowserRouter","Routes","Route","MediaQuery","Home","Login","getCurrentUser","fetchRuns","NavBar","RunsContainer","jsxDEV","_jsxDEV","App","props","_s","isLoggedIn","setIsLoggedIn","useState","loggedIn","handleLogin","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","_c","mapStateToProps","state","currentUserReducer","runs","runsReducer","$RefreshReg$"],"sources":["/Users/ingridf/Documents/chase-runner/src/App.js"],"sourcesContent":["import React, { useEffect} from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport MediaQuery from 'react-responsive';\nimport Home from './components/Home.js';\nimport Login from './components/Login.js';\nimport { getCurrentUser } from './actions/currentUser.js';\nimport { fetchRuns } from './actions/fetchRuns';\nimport NavBar from './components/NavBar.js';\nimport RunsContainer from './containers/RunsContainer.js';\n\n\nfunction App(props) {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(loggedIn);\n\n  const handleLogin = () => {\n    // Simulating a login action\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    // Simulating a logout action\n    setIsLoggedIn(false);\n  };\n\n  useEffect(() => {\n    props.getCurrentUser();\n    props.fetchRuns();\n  }, [props]);\n\n  // const { loggedIn,  runs } = props\n\n  return (\n    <div className=\"App\">\n      {isLoggedIn ? <NavBar /> : <Home /> }\n      {/* <MediaQuery minWidth={800}> */}\n      <BrowserRouter>\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route exact path=\"/login\" element={<Login />} />\n          <Route exact path=\"/profile\" element={isLoggedIn ? <RunsContainer /> : <Home />} />\n        </Routes>\n      </BrowserRouter>\n      {/* </MediaQuery> */}\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return ({\n    loggedIn: !!state.currentUserReducer,\n    runs: state.runsReducer\n  })\n}\n\n\nexport default connect(mapStateToProps, { getCurrentUser, fetchRuns }) (App);\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}