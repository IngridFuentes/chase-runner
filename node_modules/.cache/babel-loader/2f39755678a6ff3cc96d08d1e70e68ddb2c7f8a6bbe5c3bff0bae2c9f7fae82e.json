{"ast":null,"code":"import { resetLoginForm } from \"./loginForm.js\";\nimport { fetchRuns, clearRuns } from \"./fetchRuns.js\";\n\n// synchronous action creators\nexport const setCurrentUser = user => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    user\n  };\n};\nexport const clearCurrentUser = () => {\n  return {\n    type: \"CLEAR_CURRENT_USER\"\n  };\n};\n\n// asynchronous action creators\n\n// export const login = (credentials, history) => {\n//     console.log(credentials, history, 'history')\n//     return async (dispatch) => {\n//         try{ \n//         const resp = await fetch('http://localhost:3000/api/v1/login', {\n//             credentials: 'include',\n//             method: 'POST',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(credentials),\n//           });\n//           const user = await resp.json();\n//                 if(user.error){\n//                     alert(user.error)\n//                 } else {\n//                     dispatch({ type: 'SET_CURRENT_USER', user: user })\n//                     dispatch(fetchRuns())\n//                     dispatch(resetLoginForm())\n//                     console.log(history, 'history')\n//                     history.push('/profile')                  \n//                 }\n//         } catch(error){\n//             console.log(error)\n//         } \n//         };\n// }\n\nexport const login = (credentials, navigate) => {\n  // console.log(credentials)\n  // return (dispatch) => {\n  // fetch('/csrf_tokens')\n  // .then((resp) => resp.json())\n  // .then((data) => {\n  // const csrfToken = data.csrfToken;\n  // let token = document.querySelector('meta[name=\"csrf-token\"]').content;\n  return dispatch => {\n    fetch('http://localhost:3000/users/sign_up', {\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      body: JSON.stringify(credentials)\n    }).then(resp => resp.json()).then(user => {\n      if (user.error) {\n        alert(user.error);\n      } else {\n        dispatch({\n          type: 'SET_CURRENT_USER',\n          user: user\n        });\n        dispatch(fetchRuns());\n        dispatch(resetLoginForm());\n        navigate('/profile');\n      }\n    }).catch(console.log);\n  };\n};\nexport const logout = event => {\n  return dispatch => {\n    dispatch(clearCurrentUser());\n    dispatch(clearRuns());\n    return fetch('http://localhost:3000/users/sign_out', {\n      credentials: \"include\",\n      method: \"DELETE\"\n    });\n  };\n};\nexport const getCurrentUser = () => {\n  console.log(\"DISPATCHING GET CURRENT USER\");\n  return dispatch => {\n    return fetch('http://localhost:3000/users/sign_in', {\n      credentials: \"include\",\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => {\n      return resp.json();\n    }).then(user => {\n      if (user.error) {\n        alert(user.error);\n      } else {\n        dispatch(setCurrentUser(user));\n      }\n    });\n  };\n};","map":{"version":3,"names":["resetLoginForm","fetchRuns","clearRuns","setCurrentUser","user","type","clearCurrentUser","login","credentials","navigate","dispatch","fetch","method","headers","body","JSON","stringify","then","resp","json","error","alert","catch","console","log","logout","event","getCurrentUser"],"sources":["/Users/ingridf/Documents/chase-runner/src/actions/currentUser.js"],"sourcesContent":["import { resetLoginForm } from \"./loginForm.js\"\nimport { fetchRuns, clearRuns } from \"./fetchRuns.js\"\n\n\n\n// synchronous action creators\nexport const setCurrentUser = user =>  {\n    return {\n        type: \"SET_CURRENT_USER\",\n        user\n    }\n}\n\nexport const clearCurrentUser = () => {\n    return {\n        type: \"CLEAR_CURRENT_USER\"\n    }\n}\n\n// asynchronous action creators\n\n// export const login = (credentials, history) => {\n//     console.log(credentials, history, 'history')\n//     return async (dispatch) => {\n//         try{ \n//         const resp = await fetch('http://localhost:3000/api/v1/login', {\n//             credentials: 'include',\n//             method: 'POST',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(credentials),\n//           });\n//           const user = await resp.json();\n//                 if(user.error){\n//                     alert(user.error)\n//                 } else {\n//                     dispatch({ type: 'SET_CURRENT_USER', user: user })\n//                     dispatch(fetchRuns())\n//                     dispatch(resetLoginForm())\n//                     console.log(history, 'history')\n//                     history.push('/profile')                  \n//                 }\n//         } catch(error){\n//             console.log(error)\n//         } \n//         };\n// }\n\nexport const login = (credentials, navigate) => {\n    // console.log(credentials)\n    // return (dispatch) => {\n        // fetch('/csrf_tokens')\n        // .then((resp) => resp.json())\n        // .then((data) => {\n        // const csrfToken = data.csrfToken;\n    // let token = document.querySelector('meta[name=\"csrf-token\"]').content;\n      return (dispatch) => {\n        fetch('http://localhost:3000/users/sign_up', {\n        credentials: 'include',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n        },\n        body: JSON.stringify(credentials),\n      })\n    \n        .then((resp) => resp.json())\n        .then((user) => {\n          if (user.error) {\n            alert(user.error);\n          } else {\n            dispatch({ type: 'SET_CURRENT_USER', user: user });\n            dispatch(fetchRuns());\n            dispatch(resetLoginForm());\n            navigate('/profile');\n          }\n        })\n        .catch(console.log);\n    };\n};\n\nexport const logout = event => {\n    return dispatch => {\n        dispatch(clearCurrentUser())\n        dispatch(clearRuns())\n        return fetch('http://localhost:3000/users/sign_out', {\n            credentials: \"include\",\n            method: \"DELETE\"\n        })\n    }\n}\n\nexport const getCurrentUser = () => {\n    console.log(\"DISPATCHING GET CURRENT USER\")\n    return(dispatch) => {\n            return fetch('http://localhost:3000/users/sign_in', {\n                credentials: \"include\",\n                method: 'GET',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n            .then(resp => {return resp.json()})\n            .then(user => { \n                if(user.error){\n                    alert(user.error)\n                } else {\n                    dispatch(setCurrentUser(user))\n                }\n            })\n\n    };\n}\n\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,SAAS,EAAEC,SAAS,QAAQ,gBAAgB;;AAIrD;AACA,OAAO,MAAMC,cAAc,GAAGC,IAAI,IAAK;EACnC,OAAO;IACHC,IAAI,EAAE,kBAAkB;IACxBD;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAGA,CAAA,KAAM;EAClC,OAAO;IACHD,IAAI,EAAE;EACV,CAAC;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,KAAK,GAAGA,CAACC,WAAW,EAAEC,QAAQ,KAAK;EAC5C;EACA;EACI;EACA;EACA;EACA;EACJ;EACE,OAAQC,QAAQ,IAAK;IACnBC,KAAK,CAAC,qCAAqC,EAAE;MAC7CH,WAAW,EAAE,SAAS;MACtBI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,kBAAkB,EAAE;MACtB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;IAClC,CAAC,CAAC,CAECS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEb,IAAI,IAAK;MACd,IAAIA,IAAI,CAACgB,KAAK,EAAE;QACdC,KAAK,CAACjB,IAAI,CAACgB,KAAK,CAAC;MACnB,CAAC,MAAM;QACLV,QAAQ,CAAC;UAAEL,IAAI,EAAE,kBAAkB;UAAED,IAAI,EAAEA;QAAK,CAAC,CAAC;QAClDM,QAAQ,CAACT,SAAS,CAAC,CAAC,CAAC;QACrBS,QAAQ,CAACV,cAAc,CAAC,CAAC,CAAC;QAC1BS,QAAQ,CAAC,UAAU,CAAC;MACtB;IACF,CAAC,CAAC,CACDa,KAAK,CAACC,OAAO,CAACC,GAAG,CAAC;EACvB,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGC,KAAK,IAAI;EAC3B,OAAOhB,QAAQ,IAAI;IACfA,QAAQ,CAACJ,gBAAgB,CAAC,CAAC,CAAC;IAC5BI,QAAQ,CAACR,SAAS,CAAC,CAAC,CAAC;IACrB,OAAOS,KAAK,CAAC,sCAAsC,EAAE;MACjDH,WAAW,EAAE,SAAS;MACtBI,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAMe,cAAc,GAAGA,CAAA,KAAM;EAChCJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC3C,OAAOd,QAAQ,IAAK;IACZ,OAAOC,KAAK,CAAC,qCAAqC,EAAE;MAChDH,WAAW,EAAE,SAAS;MACtBI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACDI,IAAI,CAACC,IAAI,IAAI;MAAC,OAAOA,IAAI,CAACC,IAAI,CAAC,CAAC;IAAA,CAAC,CAAC,CAClCF,IAAI,CAACb,IAAI,IAAI;MACV,IAAGA,IAAI,CAACgB,KAAK,EAAC;QACVC,KAAK,CAACjB,IAAI,CAACgB,KAAK,CAAC;MACrB,CAAC,MAAM;QACHV,QAAQ,CAACP,cAAc,CAACC,IAAI,CAAC,CAAC;MAClC;IACJ,CAAC,CAAC;EAEV,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}