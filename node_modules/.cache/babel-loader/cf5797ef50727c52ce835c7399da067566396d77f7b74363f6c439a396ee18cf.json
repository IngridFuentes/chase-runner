{"ast":null,"code":"var _jsxFileName = \"/Users/ingridf/Documents/chase-runner/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { updateLoginForm } from '../actions/loginForm.js';\nimport { login } from '../actions/currentUser.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = _ref => {\n  _s();\n  let {\n    loginForm,\n    updateLoginForm,\n    login\n  } = _ref;\n  // const navigate = useNavigate();\n  const history = useHistory();\n  const handleOnChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const updateFormInfo = {\n      ...loginForm,\n      [name]: value\n    };\n    updateLoginForm(updateFormInfo);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!event.target.checkValidity()) {\n      return alert(\"Invalid username or email\");\n    } else {\n      login(loginForm, history);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-field\",\n          placeholder: \"username\",\n          value: loginForm.username,\n          name: \"username\",\n          type: \"text\",\n          onChange: handleOnChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-field\",\n          placeholder: \"email\",\n          value: loginForm.email,\n          name: \"email\",\n          type: \"email\",\n          onChange: handleOnChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\",\n          className: \"btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", true);\n_c = Login;\nconst mapStateToProps = state => {\n  return {\n    //  username: state.loginForm.username,\n    //  email: state.loginForm.email\n    loginForm: state.loginForm\n  };\n};\nexport default connect(mapStateToProps, {\n  updateLoginForm,\n  login\n})(Login);\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","connect","updateLoginForm","login","useNavigate","jsxDEV","_jsxDEV","Login","_ref","_s","loginForm","history","useHistory","handleOnChange","event","name","value","target","updateFormInfo","handleSubmit","preventDefault","checkValidity","alert","className","children","onSubmit","noValidate","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","username","type","onChange","required","email","_c","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/ingridf/Documents/chase-runner/src/components/Login.js"],"sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { updateLoginForm } from '../actions/loginForm.js'\nimport { login } from '../actions/currentUser.js'\nimport { useNavigate } from 'react-router-dom'\n\n\n\nconst Login = ({loginForm, updateLoginForm, login}) => {\n\n    // const navigate = useNavigate();\n    const history = useHistory();\n\n    const handleOnChange = event => {\n        const {name, value} = event.target\n        const updateFormInfo = {\n            ...loginForm,\n            [name]: value\n        }\n        updateLoginForm(updateFormInfo)\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        if (!event.target.checkValidity()) {\n            return alert(\"Invalid username or email\")\n          } else {\n             login(loginForm, history);\n          }\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"form-popup\">\n                <form onSubmit={handleSubmit} noValidate >\n                    <span className=\"close\">&times;</span>\n                    <input className=\"login-field\" placeholder=\"username\" value={loginForm.username} name=\"username\" type=\"text\" onChange={handleOnChange} required />\n                    <input className=\"login-field\" placeholder=\"email\" value={loginForm.email} name=\"email\" type=\"email\" onChange={handleOnChange} required />\n                    <input type=\"submit\" value=\"Login\" className=\"btn\" />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n    //  username: state.loginForm.username,\n    //  email: state.loginForm.email\n    loginForm: state.loginForm\n    }\n}\n\nexport default connect(mapStateToProps, { updateLoginForm, login })(Login);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}