var y=class{encodeBytes(e){let n=btoa(String.fromCharCode(...new Uint8Array(e))).replace(/\+/g,"-").replace(/\//g,"_");return $(n)}decodeBytes(e){let t=e.replace(/-/g,"+").replace(/_/g,"/"),n=$(t);return Uint8Array.from(atob(n),p=>p.charCodeAt(0))}},$=s=>{let e=s.indexOf("=");return s.slice(0,e===-1?s.length:e)};var h=class extends Error{constructor(t,n){super();this.name="PassageError",this.statusCode=n.status,this.statusText=n.statusText,this.message=this._parsePsgErrorResponse(t)}_parsePsgErrorResponse(t){try{return t=JSON.parse(t),t.error?t.error:""}catch{return t}}},P=(r=>(r[r.MultipleChoice=300]="MultipleChoice",r[r.MovedPermanantly=301]="MovedPermanantly",r[r.Found=302]="Found",r[r.SeeOther=303]="SeeOther",r[r.NotModified=304]="NotModified",r[r.TemporaryRedirect=307]="TemporaryRedirect",r[r.PermanentRedirect=308]="PermanentRedirect",r[r.BadRequest=400]="BadRequest",r[r.Unauthorized=401]="Unauthorized",r[r.PaymentRequired=402]="PaymentRequired",r[r.Forbidden=403]="Forbidden",r[r.NotFound=404]="NotFound",r[r.MethodNotAllowed=405]="MethodNotAllowed",r[r.NotAcceptable=406]="NotAcceptable",r[r.ProxyAuthenticationRequired=407]="ProxyAuthenticationRequired",r[r.RequestTimeout=408]="RequestTimeout",r[r.Conflict=409]="Conflict",r[r.Gone=410]="Gone",r[r.LengthRequired=411]="LengthRequired",r[r.PreconditionFailed=412]="PreconditionFailed",r[r.PayloadTooLarge=413]="PayloadTooLarge",r[r.URITooLong=414]="URITooLong",r[r.UnsupportedMediaType=415]="UnsupportedMediaType",r[r.RangeNotSatisfiable=416]="RangeNotSatisfiable",r[r.ExpectationFailed=417]="ExpectationFailed",r[r.MisdirectedRequest=421]="MisdirectedRequest",r[r.UnprocessableEntity=422]="UnprocessableEntity",r[r.Locked=423]="Locked",r[r.FailedDependency=424]="FailedDependency",r[r.TooEarly=425]="TooEarly",r[r.UpgradeRequired=426]="UpgradeRequired",r[r.PreconditionRequired=428]="PreconditionRequired",r[r.TooManyRequests=429]="TooManyRequests",r[r.RequestHeaderFieldsTooLarge=431]="RequestHeaderFieldsTooLarge",r[r.UnavailableForLegalReasons=451]="UnavailableForLegalReasons",r[r.InternalServerError=500]="InternalServerError",r[r.NotImplemented=501]="NotImplemented",r[r.BadGateway=502]="BadGateway",r[r.ServiceUnavailable=503]="ServiceUnavailable",r[r.GatewayTimeout=504]="GatewayTimeout",r[r.HTTPVersionNotSupported=505]="HTTPVersionNotSupported",r[r.VariantAlsoNegotiates=506]="VariantAlsoNegotiates",r[r.InsufficientStorage=507]="InsufficientStorage",r[r.LoopDetected=508]="LoopDetected",r[r.NotExtended=510]="NotExtended",r[r.NetworkAuthenticationRequired=511]="NetworkAuthenticationRequired",r[r.PSGCredObjectDoesNotExist=700]="PSGCredObjectDoesNotExist",r[r.PSGParsePublicKeyForNewDeviceFailed=701]="PSGParsePublicKeyForNewDeviceFailed",r[r.PSGParsePublicKeyForLoginFailed=702]="PSGParsePublicKeyForLoginFailed",r[r.PSGCouldNotGetUserCredential=703]="PSGCouldNotGetUserCredential",r[r.PSGLoginRequired=704]="PSGLoginRequired",r))(P||{});import C from"js-cookie";var j=new y,w=class{psgCredIDExists(e){let t=e.user.id,n=e.handshake.challenge.publicKey.allowCredentials,i=this.getPsgCredObj();if(!i)throw new h("Could not get psg_cred_obj",{status:700,statusText:"PSG Cred Object Does Not Exist"});let p=JSON.parse(i)[t];return p?n.find(g=>{if(j.encodeBytes(j.decodeBytes(g.id))===j.encodeBytes(j.decodeBytes(p)))return!0}):!1}setPsgCredID(e,t){if(!t)throw new h("Could not get user's credential",{status:703,statusText:"PSG Could Not Get User Credential"});let n=this.getPsgCredObj();if(n){let i=JSON.parse(n);i[e]=t==null?void 0:t.id,this.setPsgCredObj(JSON.stringify(i))}else this.setPsgCredObj(JSON.stringify({[e]:t==null?void 0:t.id}))}removeCredential(e){let t=this.getPsgCredObj();if(t===void 0)return;let n=JSON.parse(t);Object.keys(n).forEach(i=>{n[i]===e&&delete n[i]}),this.setPsgCredObj(JSON.stringify(n))}getPsgCredObj(){let e=C.get("psg_cred_obj"),t=localStorage.getItem("psg_cred_obj");if(e!==void 0)return C.set("psg_cred_obj",e,{expires:400,sameSite:"Strict"}),t===null&&localStorage.setItem("psg_cred_obj",e),e;if(t!==null)return C.set("psg_cred_obj",t,{expires:400,sameSite:"Strict"}),t}setPsgCredObj(e){C.set("psg_cred_obj",e,{expires:400,sameSite:"Strict"}),localStorage.setItem("psg_cred_obj",e)}};async function c(s){return s.ok?s.json():await s.text().then(e=>{throw new h(e,s)})}function D(){let s=navigator.userAgent.toLowerCase().indexOf("firefox")>-1,e=window.navigator.userAgent.match(/Firefox\/([0-9]+)\./),t=e?parseInt(e[1]):0;return navigator.platform.indexOf("Win")!==-1&&s&&t===98}function J(s){let e=new Uint8Array(68);e.set(s.slice(0,68));let t=new Uint8Array(s.byteLength-68);t.set(s.slice(68,s.byteLength));let n=new Uint8Array(15),i=new Uint8Array(e.byteLength+n.byteLength+t.byteLength);i.set(e,0),i.set(n,e.byteLength),i.set(t,e.byteLength+n.byteLength);let p=i[30]+15;return i.set([p],30),i}var V={URL:"https://auth.passage.id",version:"@passageidentity/passage-js 3.8.1",CAPTURE_EVENT_URL:"https://us-central1-passage-prod.cloudfunctions.net/capture-event",SENTRY_RELEASE:"passage-js@3.8.1-prod",SENTRY_PROJECT:"passage-js",SENTRY_PROJECT_DSN:"",SENTRY_PROJECT_ENV:"prod",SENTRY_PROJECT_VERSION:"3.8.1"};var f=V;function o(s){var i;let e=new Headers(s),t=f.version,n=f.EXTRA_HEADERS;if(t&&e.append("Passage-Version",t),n){let p=((i=n.find(a=>a.hasOwnProperty("elementVersion")))==null?void 0:i.elementVersion)||null;p&&e.append("Passage-Element-Version",p)}return e}var q=class{getRefreshToken(){return Promise.resolve(void 0)}},G=class extends q{clearTokens(){return Promise.resolve()}},H=class extends G{constructor(){super(...arguments);this.noLocalStorage=typeof window>"u";this.noLocalStorageError=t=>"Failed to access localStorage or cookies. Must be run client-side."}getAuthToken(){if(this.noLocalStorage)return Promise.reject(this.noLocalStorageError("getAuthToken"));let t=localStorage.getItem("psg_auth_token");return t===null?Promise.resolve(""):Promise.resolve(t)}setAuthToken(t){if(this.noLocalStorage)return Promise.reject(this.noLocalStorageError("setAuthToken"));localStorage.setItem("psg_auth_token",t);let n=!this._isHttps()&&this._isLocalHost();return document.cookie=`psg_auth_token = ${t}; path=/ ${n?"":";secure"}`,Promise.resolve()}getRefreshToken(){this.noLocalStorage&&Promise.reject(this.noLocalStorageError("getRefreshToken"));let t=localStorage.getItem("psg_refresh_token");return t===null?Promise.resolve(void 0):Promise.resolve(t)}setRefreshToken(t){return this.noLocalStorage&&Promise.reject(this.noLocalStorageError("setRefreshToken")),localStorage.setItem("psg_refresh_token",t),Promise.resolve()}setTokens(t){return this.noLocalStorage&&Promise.reject(this.noLocalStorageError("setTokens")),this.setAuthToken(t.auth_token),t.refresh_token&&this.setRefreshToken(t.refresh_token),Promise.resolve()}clearTokens(){return this.noLocalStorage&&Promise.reject(this.noLocalStorageError("clearTokens")),localStorage.removeItem("psg_auth_token"),document.cookie="psg_auth_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;",localStorage.removeItem("psg_refresh_token"),Promise.resolve()}_isLocalHost(){return Boolean(window.location.hostname==="localhost"||window.location.hostname==="[::1]"||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))}_isHttps(){return location.protocol==="https:"}};function v(s){return s.setTokens!==void 0}var Z=s=>typeof s=="object"&&s!==null&&typeof s.auth_result<"u";function k(s,e){return Z(s)?(v(e)&&e.setTokens(s.auth_result),s):(console.warn("Not a valid auth response"),s)}import{CreateCredentialUtils as ee}from"@passageidentity/webauthnutils";var E=(n=>(n.Platform="platform",n.CrossPlatform="cross-platform",n.Any="any",n))(E||{});var F=new y,te=new w,U=class{constructor(e,t,n){this.tokenStore=t;this.apiUrl=e+"/register/",this.identifier=n}async withWebAuthn(e){var m;let t=await fetch(this.apiUrl+"webauthn/start",{headers:o(),body:JSON.stringify({identifier:this.identifier,authenticator_attachment:(m=e==null?void 0:e.authenticatorAttachment)!=null?m:"platform"}),method:"POST"}).then(c),n=t.handshake.challenge.publicKey,{credential:i,transports:p}=await ee.createCredential(n).catch(T=>{throw new h("error parsing public key for webAuthn",{status:702,statusText:"PSG Parse Public Key For Login Failed"})}),a=new Uint8Array(i==null?void 0:i.response.attestationObject);D()&&(a=J(a));let g=t.user.id,b=await fetch(this.apiUrl+"webauthn/finish",{headers:o(),method:"POST",body:JSON.stringify({user_id:g,handshake_id:t.handshake.id,handshake_response:{rawId:F.encodeBytes(i==null?void 0:i.rawId),id:i==null?void 0:i.id,type:i==null?void 0:i.type,response:{attestationObject:F.encodeBytes(a),clientDataJSON:F.encodeBytes(i==null?void 0:i.response.clientDataJSON)},transports:p}})}).then(c).then(T=>k(T,this.tokenStore));return te.setPsgCredID(g,i),b.auth_result}};import{GetCredentialUtils as ne}from"@passageidentity/webauthnutils";var N=new y,O=class{constructor(e,t,n){this.tokenStore=t;this.apiUrl=e+"/login/",this.identifier=n!=null?n:""}async withWebAuthn(e){let t=JSON.stringify({identifier:this.identifier}),n=this.identifier?t:void 0,i=await fetch(this.apiUrl+"webauthn/start",{headers:o(),method:"POST",body:n}).then(c),p=i.handshake.challenge.publicKey,a=await ne.getCredential(p,e).catch(b=>{throw new h("error parsing public key for webAuthn",{status:702,statusText:"PSG Parse Public Key For Login Failed"})});return a?(await fetch(this.apiUrl+"webauthn/finish",{headers:o(),method:"POST",body:JSON.stringify({user_id:this.identifier?i.user.id:void 0,handshake_id:i.handshake.id,handshake_response:{id:a.id,rawId:N.encodeBytes(a.rawId),type:a.type,response:{clientDataJSON:N.encodeBytes(a.response.clientDataJSON),authenticatorData:N.encodeBytes(a.response.authenticatorData),signature:N.encodeBytes(a.response.signature),userHandle:N.encodeBytes(a.response.userHandle)}}})}).then(c).then(b=>k(b,this.tokenStore))).auth_result:{auth_token:"",redirect_url:""}}};var A=class{constructor(e){this.apiUrl=e}async appInfo(){return(await fetch(this.apiUrl,{headers:o(),method:"GET"}).then(c)).app}async identifierExists(e){return(await fetch(this.apiUrl+"/users?identifier="+encodeURIComponent(e),{headers:o(),method:"GET"}).then(c)).user}};var _=new y,z=new w,S=class{constructor(e,t){this.tokenStore=t;this.apiUrl=e}async newRegister(e,t){return(await fetch(this.apiUrl+"/register/magic-link",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,magic_link_path:window.location.pathname+window.location.search+window.location.hash,language:t})}).then(c)).magic_link}async newLogin(e,t){return(await fetch(this.apiUrl+"/login/magic-link",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,magic_link_path:window.location.pathname+window.location.search+window.location.hash,language:t})}).then(c)).magic_link}async getStatus(e){return(await fetch(this.apiUrl+"/magic-link/status",{headers:o(),method:"POST",body:JSON.stringify({id:e})}).then(c).then(n=>k(n,this.tokenStore))).auth_result}async activate(e){return(await fetch(this.apiUrl+"/magic-link/activate",{headers:o(),method:"PATCH",body:JSON.stringify({magic_link:e})}).then(c).then(n=>k(n,this.tokenStore))).auth_result}async activateWebAuthnLogin(e){let t=await fetch(this.apiUrl+"/magic-link/webauthn/login/start",{headers:o(),body:JSON.stringify({magic_link:e}),method:"POST"}).then(c);if(!await z.psgCredIDExists(t))throw new h("psg_cred_obj does not exist in the allow list",{status:700,statusText:"Not Found"});let i=await navigator.credentials.get({publicKey:this._parsePublicKeyLogin(t.handshake.challenge.publicKey)}).catch(a=>{throw new h("could not parse publickey for login",{status:702,statusText:"PSG Parse Public Key For Login Failed"})});return i?(await fetch(this.apiUrl+"/magic-link/webauthn/login/finish",{headers:o(),method:"POST",body:JSON.stringify({magic_link:e,user_id:t.user.id,handshake_id:t.handshake.id,handshake_response:{id:i.id,rawId:_.encodeBytes(i.rawId),type:i.type,response:{clientDataJSON:_.encodeBytes(i.response.clientDataJSON),authenticatorData:_.encodeBytes(i.response.authenticatorData),signature:_.encodeBytes(i.response.signature),userHandle:_.encodeBytes(i.response.userHandle)}}})}).then(c).then(a=>k(a,this.tokenStore))).auth_result:{auth_token:"",redirect_url:""}}async activateWebAuthnNewDevice(e){let t=await fetch(this.apiUrl+"/magic-link/webauthn/new/start",{headers:o(),body:JSON.stringify({magic_link:e}),method:"POST"}).then(c),n=await navigator.credentials.create({publicKey:this._parsePublicKeyNewDevice(t.handshake.challenge.publicKey)}).catch(g=>{throw new h("could not parse public key for new device",{status:701,statusText:"PSG Parse Public Key For New Device Failed"})}),i=new Uint8Array(n==null?void 0:n.response.attestationObject);D()&&(i=J(i));let p=await fetch(this.apiUrl+"/magic-link/webauthn/new/finish",{headers:o(),method:"POST",body:JSON.stringify({magic_link:e,user_id:t.user.id,handshake_id:t.handshake.id,handshake_response:{rawId:_.encodeBytes(n.rawId),id:n.id,type:n.type,response:{attestationObject:_.encodeBytes(i),clientDataJSON:_.encodeBytes(n.response.clientDataJSON)}},device_name:navigator.userAgent})}).then(c).then(g=>k(g,this.tokenStore)),a=t.user.id;return z.setPsgCredID(a,n),p.auth_result}_parsePublicKeyLogin(e){if(e.challenge=_.decodeBytes(e.challenge.toString()),e.allowCredentials){for(let t=0;t<e.allowCredentials.length;t++){let n=e.allowCredentials[t];n.id=_.decodeBytes(n.id.toString())}return e}return e}_parsePublicKeyNewDevice(e){return e.challenge=_.decodeBytes(e.challenge.toString()),e.user.id=_.decodeBytes(e.user.id.toString()),e}};var R=class{constructor(e,t){this.tokenStore=t;this.apiUrl=e}async newRegister(e,t){return await fetch(this.apiUrl+"/register/otp",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,language:t})}).then(c)}async newLogin(e,t){return await fetch(this.apiUrl+"/login/otp",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,language:t})}).then(c)}async activate(e,t){return(await fetch(this.apiUrl+"/otp/activate",{headers:o(),method:"POST",body:JSON.stringify({otp:e,otp_id:t})}).then(c).then(i=>k(i,this.tokenStore))).auth_result}};var re=(n=>(n.ACTIVE="active",n.INACTIVE="inactive",n.PENDING="pending",n))(re||{}),W=(n=>(n.Platform="platform",n.Passkey="passkey",n.SecurityKey="security_key",n))(W||{});import K from"jwt-decode";function x(s){return`${f.URL}/v1/apps/${s}`}var L=class{constructor(e,t){this.tokenStore=t;this.apiUrl=x(e)+"/tokens/"}async authGuard(){try{let e=await this.tokenStore.getAuthToken(),t=K(e,{header:!0}),n=K(e);return!!(n!==void 0&&t!==void 0&&this._validJWTPayload(n)&&this._validJWTHeader(t))}catch{return!1}}async signOut(){let e=await this.tokenStore.getRefreshToken();return e?fetch(`${this.apiUrl}?`+new URLSearchParams({refresh_token:e}),{method:"DELETE"}).then(({status:t})=>t===200).finally(()=>{v(this.tokenStore)&&this.tokenStore.clearTokens()}):(v(this.tokenStore)&&this.tokenStore.clearTokens(),!0)}async getAuthToken(){let e=await this.tokenStore.getAuthToken();if(await this.tokenStore.getRefreshToken()===void 0){if(!e)throw new h("Login required",{status:704,statusText:"Login required"});return e}if(e){let n=K(e);if(n!==void 0&&this._validJWTPayload(n))return Promise.resolve(e)}return this.refresh().then(n=>n.auth_token)}async refresh(){let e=new h("Login required",{status:704,statusText:"Login required"}),t=await this.tokenStore.getRefreshToken();return t?fetch(this.apiUrl,{headers:o(),method:"POST",body:JSON.stringify({refresh_token:t})}).then(c).then(n=>(v(this.tokenStore)&&this.tokenStore.setTokens(n.auth_result),n.auth_result)).catch(()=>{throw e}):Promise.reject(e)}_validJWTPayload(e){let t=["exp","iss","sub"],n=Math.floor(Date.now()/1e3);return t.forEach(i=>{if(!(i in e))return!1}),!(e.exp&&n>e.exp)}_validJWTHeader(e){let t={alg:"RS256",typ:"JWT"};return!(e.alg!==t.alg||e.typ!==t.typ)}};var I=new y,Y=new w,M=class{constructor(e,t){this.tokenStore=t;this.apiUrl=x(e)+"/currentuser",this.session=new L(e,this.tokenStore)}async userInfo(){let e=await this._getToken(),t=await fetch(this.apiUrl,{method:"GET",headers:o({Authorization:`Bearer ${e}`})}).then(async n=>n.status!==200?void 0:await n.json()).catch(n=>{throw new h("Failed to fetch current user.",{status:404,statusText:"Not Found"})});return t==null?void 0:t.user}async changeEmail(e,t){let n=await this._getToken();return(await fetch(`${this.apiUrl}/email`,{method:"PATCH",headers:o({Authorization:`Bearer ${n}`,"Content-Type":"application/json"}),body:JSON.stringify({new_email:e,language:t})}).then(c)).magic_link}async changePhone(e,t){let n=await this._getToken();return(await fetch(`${this.apiUrl}/phone`,{method:"PATCH",headers:o({Authorization:`Bearer ${n}`,"Content-Type":"application/json"}),body:JSON.stringify({new_phone:e,language:t})}).then(c)).magic_link}async editDevice(e,t){if(e===""||e===void 0)throw new h("A deviceID is required for an edit device request.",{status:400,statusText:"Bad Request"});if(Object.keys(t).length===0)throw new h("Edit device request must not have an empty request body.",{status:400,statusText:"Bad Request"});let n=await this._getToken();return(await fetch(`${this.apiUrl}/devices/${e}`,{method:"PATCH",headers:o({Authorization:`Bearer ${n}`,"Content-Type":"application/json"}),body:JSON.stringify({...t})}).then(c)).device}async listDevices(){let e=await this._getToken();return(await fetch(`${this.apiUrl}/devices/`,{method:"GET",headers:o({Authorization:`Bearer ${e}`,"Content-Type":"application/json"})}).then(c)).devices}async addDevice(e){var b;let t=await this._getToken(),n=await fetch(this.apiUrl+"/devices/start",{headers:o({Authorization:`Bearer ${t}`}),body:JSON.stringify({authenticator_attachment:(b=e==null?void 0:e.authenticatorAttachment)!=null?b:"platform"}),method:"POST"}).then(c),i=await navigator.credentials.create({publicKey:this._parsePublicKey(n.handshake.challenge.publicKey)}).catch(m=>{throw new h("failed to parse public key",{status:701,statusText:"PSG Parse Public Key For New Device Failed"})}).then(m=>m),p=[];(i==null?void 0:i.response.getTransports)&&typeof(i==null?void 0:i.response.getTransports)=="function"&&(p=i==null?void 0:i.response.getTransports());let a=n.user.id,g=await fetch(this.apiUrl+"/devices/finish",{headers:o({Authorization:`Bearer ${t}`}),method:"POST",body:JSON.stringify({user_id:a,handshake_id:n.handshake.id,handshake_response:{rawId:I.encodeBytes(i==null?void 0:i.rawId),id:i==null?void 0:i.id,type:i==null?void 0:i.type,response:{attestationObject:I.encodeBytes(i==null?void 0:i.response.attestationObject),clientDataJSON:I.encodeBytes(i==null?void 0:i.response.clientDataJSON)},transports:p}})}).then(c);return Y.setPsgCredID(a,i),g.device}async deleteDevice(e){let t=typeof e=="string"?e:e.id,n=typeof e=="string"?void 0:e.cred_id;if(!t)throw new h("A deviceID is required to delete a device.",{status:404,statusText:"Not Found"});let i=!1,p=await this._getToken();return i=await fetch(`${this.apiUrl}/devices/${t}`,{method:"DELETE",headers:o({Authorization:`Bearer ${p}`,"Content-Type":"application/json"})}).then(async a=>a.ok?!0:await a.text().then(g=>{throw new h(g,a)})),i&&n!==void 0&&Y.removeCredential(n),i}async getMetadata(){let e=await this._getToken();return(await fetch(`${this.apiUrl}/user-metadata`,{method:"GET",headers:o({Authorization:`Bearer ${e}`})}).then(c)).user_metadata}async updateMetadata(e){let t=await this._getToken();return(await fetch(`${this.apiUrl}/user-metadata`,{method:"PATCH",headers:o({Authorization:`Bearer ${t}`,"Content-Type":"application/json"}),body:JSON.stringify({user_metadata:e})}).then(c)).user}_parsePublicKey(e){return e.challenge=I.decodeBytes(e.challenge.toString()),e.user.id=I.decodeBytes(e.user.id.toString()),e}async _getToken(){return await this.session.getAuthToken()}};import{GetCredentialUtils as ie}from"@passageidentity/webauthnutils";var B=class{async getBrowserInfo(){let e=await ie.getCredentialAvailable();return{createPassKeySupported:e.syncedCredential,getPassKeySupported:e.syncedCredential,conditionalUISupported:e.conditionalUI}}};import{CreateCredentialUtils as X,GetCredentialUtils as se}from"@passageidentity/webauthnutils";var Q=class{constructor(e,t){this.appID=e;this.fullUrl=x(this.appID),(t==null?void 0:t.tokenStore)===void 0?this.tokenStore=new H:this.tokenStore=t.tokenStore,this.extraHeaders=t==null?void 0:t.extraHeaders,f.EXTRA_HEADERS=this.extraHeaders}credIDExists(e){let t=new w().getPsgCredObj();return t?!!JSON.parse(t)[e]:!1}async register(e,t){return await new U(this.fullUrl,this.tokenStore,e).withWebAuthn(t)}async login(e){return await new O(this.fullUrl,this.tokenStore,e).withWebAuthn()}async loginConditional(e){return await new O(this.fullUrl,this.tokenStore).withWebAuthn({mediation:"conditional",signal:e})}async appInfo(){return await new A(this.fullUrl).appInfo()}async browserInfo(){return await new B().getBrowserInfo()}async getCredentialAvailable(){return await se.getCredentialAvailable()}async createCredentialAvailable(){return await X.createCredentialAvailable()}checkWebauthnConfig(e){let t=!0;return e.auth_origin.replace(/\/$/,"")!=window.location.origin.replace(/\/$/,"")&&(console.error('The auth_origin configured for webauthn in your app settings does not match the "origin" of your current URL.  Please reconfigure this in the admin console. (Your current "origin" is `'+window.location.origin+"`) Passage will continue to work with other authentication methods."),t=!1),t}async isWebauthnSupported(e){let t=await X.createCredentialAvailable();return e?t.securityKey:t.platform}async identifierExists(e){let n=await new A(this.fullUrl).identifierExists(e);return n&&(n.hasPasskey=n.webauthn_types.includes("passkey"),n)}async newRegisterMagicLink(e,t){return await new S(this.fullUrl,this.tokenStore).newRegister(e,t)}async newLoginMagicLink(e,t){return await new S(this.fullUrl,this.tokenStore).newLogin(e,t)}async magicLinkActivate(e){return await new S(this.fullUrl,this.tokenStore).activate(e)}async magicLinkActivateWebAuthnLogin(e){return await new S(this.fullUrl,this.tokenStore).activateWebAuthnLogin(e)}async magicLinkActivateWebAuthnNewDevice(e){return await new S(this.fullUrl,this.tokenStore).activateWebAuthnNewDevice(e)}async getMagicLinkStatus(e){return await new S(this.fullUrl,this.tokenStore).getStatus(e)}async newRegisterOneTimePasscode(e,t){return await new R(this.fullUrl,this.tokenStore).newRegister(e,t)}async newLoginOneTimePasscode(e,t){return await new R(this.fullUrl,this.tokenStore).newLogin(e,t)}async oneTimePasscodeActivate(e,t){return await new R(this.fullUrl,this.tokenStore).activate(e,t)}getCurrentUser(){return new M(this.appID,this.tokenStore)}getCurrentSession(){return new L(this.appID,this.tokenStore)}async createUser(e){return(await fetch(`${this.fullUrl}/users`,{headers:o(),body:JSON.stringify({...e}),method:"POST"}).then(c)).user}};import{serializeError as oe}from"serialize-error";var ae=s=>JSON.parse(JSON.stringify(s,(e,t)=>{if(!(t==null||t==="undefined"))return t})),hn=async s=>{try{let{error:e,message:t,sentryConfig:{url:n=f.CAPTURE_EVENT_URL,project:i=f.SENTRY_PROJECT,dsn:p=f.SENTRY_PROJECT_DSN,environment:a=f.SENTRY_PROJECT_ENV,release:g=f.SENTRY_RELEASE,version:b=f.SENTRY_PROJECT_VERSION}={}}=s,m=ae({project:i,dsn:p,environment:a,url:n,release:g,version:b});if(!(m.project&&m.url)||!(e||t))return;let T={project:m.project,dsn:m.dsn,environment:m.environment,release:m.release,version:m.version};t&&(T={...T,message:t}),e&&(T={...T,serializedError:oe(typeof e=="string"?new Error(e):e)}),await fetch(m.url,{headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST",body:JSON.stringify(T)})}catch(e){console.error(e)}};var ce=(n=>(n.email="email",n.phone="phone",n.both="both",n))(ce||{}),ue=(i=>(i.Phone="phone",i.Email="email",i.Both="both",i.Either="either",i))(ue||{}),le=(a=>(a.STRING="string",a.BOOLEAN="boolean",a.INTEGER="integer",a.DATE="date",a.PHONE="phone",a.EMAIL="email",a))(le||{}),he=(n=>(n.LoginCode="otp",n.MagicLink="magic_link",n.None="none",n))(he||{}),pe=(d=>(d.ANDALE_MONO="Andal\xE9 Mono",d.ARIAL="Arial",d.ARIAL_BLACK="Arial Black",d.BASKERVILLE="Baskerville",d.BRADLEY_HAND="Bradley Hand",d.BRUSH_SCRIPT_MT="Brush Script MT",d.COMIC_SANS_MS="Comic Sans MS",d.COURIER="Courier",d.GEORGIA="Georgia",d.GILL_SANS="Gill Sans",d.HELVETICA="Helvetica",d.IMPACT="Impact",d.LUCIDA="Lucida",d.LUMINARI="Luminari",d.MONACO="Monaco",d.PALATINO="Palatino",d.TAHOMA="Tahoma",d.TIMES_NEW_ROMAN="Times New Roman",d.TREBUCHET_MS="Trebuchet MS",d.VERDANA="Verdana",d))(pe||{});export{he as AllowedFallbackAuth,E as AuthenticatorAttachment,ce as Identifier,Q as Passage,h as PassageError,P as PassageErrorCode,H as PassageTokenStore,re as PassageUserStatus,q as ReadOnlyTokenStore,ue as RequiredIdentifier,L as Session,G as TokenStore,M as User,le as UserMetadataType,W as WebAuthnType,pe as WebSafeFonts,hn as captureEvent,ae as cleanSentryConfig,v as isFullTokenStore};
//#