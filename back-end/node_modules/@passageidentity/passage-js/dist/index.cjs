"use strict";var pe=Object.create;var J=Object.defineProperty;var de=Object.getOwnPropertyDescriptor;var ge=Object.getOwnPropertyNames;var me=Object.getPrototypeOf,fe=Object.prototype.hasOwnProperty;var ye=(s,e)=>{for(var t in e)J(s,t,{get:e[t],enumerable:!0})},W=(s,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of ge(e))!fe.call(s,r)&&r!==t&&J(s,r,{get:()=>e[r],enumerable:!(n=de(e,r))||n.enumerable});return s};var Y=(s,e,t)=>(t=s!=null?pe(me(s)):{},W(e||!s||!s.__esModule?J(t,"default",{value:s,enumerable:!0}):t,s)),_e=s=>W(J({},"__esModule",{value:!0}),s);var be={};ye(be,{AllowedFallbackAuth:()=>le,AuthenticatorAttachment:()=>F,Identifier:()=>ae,Passage:()=>z,PassageError:()=>l,PassageErrorCode:()=>T,PassageTokenStore:()=>U,PassageUserStatus:()=>ne,ReadOnlyTokenStore:()=>G,RequiredIdentifier:()=>ce,Session:()=>v,TokenStore:()=>E,User:()=>C,UserMetadataType:()=>ue,WebAuthnType:()=>V,WebSafeFonts:()=>he,captureEvent:()=>Se,cleanSentryConfig:()=>oe,isFullTokenStore:()=>P});module.exports=_e(be);var f=class{encodeBytes(e){let n=btoa(String.fromCharCode(...new Uint8Array(e))).replace(/\+/g,"-").replace(/\//g,"_");return X(n)}decodeBytes(e){let t=e.replace(/-/g,"+").replace(/_/g,"/"),n=X(t);return Uint8Array.from(atob(n),h=>h.charCodeAt(0))}},X=s=>{let e=s.indexOf("=");return s.slice(0,e===-1?s.length:e)};var l=class extends Error{constructor(t,n){super();this.name="PassageError",this.statusCode=n.status,this.statusText=n.statusText,this.message=this._parsePsgErrorResponse(t)}_parsePsgErrorResponse(t){try{return t=JSON.parse(t),t.error?t.error:""}catch{return t}}},T=(i=>(i[i.MultipleChoice=300]="MultipleChoice",i[i.MovedPermanantly=301]="MovedPermanantly",i[i.Found=302]="Found",i[i.SeeOther=303]="SeeOther",i[i.NotModified=304]="NotModified",i[i.TemporaryRedirect=307]="TemporaryRedirect",i[i.PermanentRedirect=308]="PermanentRedirect",i[i.BadRequest=400]="BadRequest",i[i.Unauthorized=401]="Unauthorized",i[i.PaymentRequired=402]="PaymentRequired",i[i.Forbidden=403]="Forbidden",i[i.NotFound=404]="NotFound",i[i.MethodNotAllowed=405]="MethodNotAllowed",i[i.NotAcceptable=406]="NotAcceptable",i[i.ProxyAuthenticationRequired=407]="ProxyAuthenticationRequired",i[i.RequestTimeout=408]="RequestTimeout",i[i.Conflict=409]="Conflict",i[i.Gone=410]="Gone",i[i.LengthRequired=411]="LengthRequired",i[i.PreconditionFailed=412]="PreconditionFailed",i[i.PayloadTooLarge=413]="PayloadTooLarge",i[i.URITooLong=414]="URITooLong",i[i.UnsupportedMediaType=415]="UnsupportedMediaType",i[i.RangeNotSatisfiable=416]="RangeNotSatisfiable",i[i.ExpectationFailed=417]="ExpectationFailed",i[i.MisdirectedRequest=421]="MisdirectedRequest",i[i.UnprocessableEntity=422]="UnprocessableEntity",i[i.Locked=423]="Locked",i[i.FailedDependency=424]="FailedDependency",i[i.TooEarly=425]="TooEarly",i[i.UpgradeRequired=426]="UpgradeRequired",i[i.PreconditionRequired=428]="PreconditionRequired",i[i.TooManyRequests=429]="TooManyRequests",i[i.RequestHeaderFieldsTooLarge=431]="RequestHeaderFieldsTooLarge",i[i.UnavailableForLegalReasons=451]="UnavailableForLegalReasons",i[i.InternalServerError=500]="InternalServerError",i[i.NotImplemented=501]="NotImplemented",i[i.BadGateway=502]="BadGateway",i[i.ServiceUnavailable=503]="ServiceUnavailable",i[i.GatewayTimeout=504]="GatewayTimeout",i[i.HTTPVersionNotSupported=505]="HTTPVersionNotSupported",i[i.VariantAlsoNegotiates=506]="VariantAlsoNegotiates",i[i.InsufficientStorage=507]="InsufficientStorage",i[i.LoopDetected=508]="LoopDetected",i[i.NotExtended=510]="NotExtended",i[i.NetworkAuthenticationRequired=511]="NetworkAuthenticationRequired",i[i.PSGCredObjectDoesNotExist=700]="PSGCredObjectDoesNotExist",i[i.PSGParsePublicKeyForNewDeviceFailed=701]="PSGParsePublicKeyForNewDeviceFailed",i[i.PSGParsePublicKeyForLoginFailed=702]="PSGParsePublicKeyForLoginFailed",i[i.PSGCouldNotGetUserCredential=703]="PSGCouldNotGetUserCredential",i[i.PSGLoginRequired=704]="PSGLoginRequired",i))(T||{});var L=Y(require("js-cookie"),1),H=new f,_=class{psgCredIDExists(e){let t=e.user.id,n=e.handshake.challenge.publicKey.allowCredentials,r=this.getPsgCredObj();if(!r)throw new l("Could not get psg_cred_obj",{status:700,statusText:"PSG Cred Object Does Not Exist"});let h=JSON.parse(r)[t];return h?n.find(d=>{if(H.encodeBytes(H.decodeBytes(d.id))===H.encodeBytes(H.decodeBytes(h)))return!0}):!1}setPsgCredID(e,t){if(!t)throw new l("Could not get user's credential",{status:703,statusText:"PSG Could Not Get User Credential"});let n=this.getPsgCredObj();if(n){let r=JSON.parse(n);r[e]=t==null?void 0:t.id,this.setPsgCredObj(JSON.stringify(r))}else this.setPsgCredObj(JSON.stringify({[e]:t==null?void 0:t.id}))}removeCredential(e){let t=this.getPsgCredObj();if(t===void 0)return;let n=JSON.parse(t);Object.keys(n).forEach(r=>{n[r]===e&&delete n[r]}),this.setPsgCredObj(JSON.stringify(n))}getPsgCredObj(){let e=L.default.get("psg_cred_obj"),t=localStorage.getItem("psg_cred_obj");if(e!==void 0)return L.default.set("psg_cred_obj",e,{expires:400,sameSite:"Strict"}),t===null&&localStorage.setItem("psg_cred_obj",e),e;if(t!==null)return L.default.set("psg_cred_obj",t,{expires:400,sameSite:"Strict"}),t}setPsgCredObj(e){L.default.set("psg_cred_obj",e,{expires:400,sameSite:"Strict"}),localStorage.setItem("psg_cred_obj",e)}};async function c(s){return s.ok?s.json():await s.text().then(e=>{throw new l(e,s)})}function M(){let s=navigator.userAgent.toLowerCase().indexOf("firefox")>-1,e=window.navigator.userAgent.match(/Firefox\/([0-9]+)\./),t=e?parseInt(e[1]):0;return navigator.platform.indexOf("Win")!==-1&&s&&t===98}function q(s){let e=new Uint8Array(68);e.set(s.slice(0,68));let t=new Uint8Array(s.byteLength-68);t.set(s.slice(68,s.byteLength));let n=new Uint8Array(15),r=new Uint8Array(e.byteLength+n.byteLength+t.byteLength);r.set(e,0),r.set(n,e.byteLength),r.set(t,e.byteLength+n.byteLength);let h=r[30]+15;return r.set([h],30),r}var Q={URL:"https://auth.passage.id",version:"@passageidentity/passage-js 3.8.1",CAPTURE_EVENT_URL:"https://us-central1-passage-prod.cloudfunctions.net/capture-event",SENTRY_RELEASE:"passage-js@3.8.1-prod",SENTRY_PROJECT:"passage-js",SENTRY_PROJECT_DSN:"",SENTRY_PROJECT_ENV:"prod",SENTRY_PROJECT_VERSION:"3.8.1"};var m=Q;function o(s){var r;let e=new Headers(s),t=m.version,n=m.EXTRA_HEADERS;if(t&&e.append("Passage-Version",t),n){let h=((r=n.find(a=>a.hasOwnProperty("elementVersion")))==null?void 0:r.elementVersion)||null;h&&e.append("Passage-Element-Version",h)}return e}var G=class{getRefreshToken(){return Promise.resolve(void 0)}},E=class extends G{clearTokens(){return Promise.resolve()}},U=class extends E{constructor(){super(...arguments);this.noLocalStorage=typeof window>"u";this.noLocalStorageError=t=>"Failed to access localStorage or cookies. Must be run client-side."}getAuthToken(){if(this.noLocalStorage)return Promise.reject(this.noLocalStorageError("getAuthToken"));let t=localStorage.getItem("psg_auth_token");return t===null?Promise.resolve(""):Promise.resolve(t)}setAuthToken(t){if(this.noLocalStorage)return Promise.reject(this.noLocalStorageError("setAuthToken"));localStorage.setItem("psg_auth_token",t);let n=!this._isHttps()&&this._isLocalHost();return document.cookie=`psg_auth_token = ${t}; path=/ ${n?"":";secure"}`,Promise.resolve()}getRefreshToken(){this.noLocalStorage&&Promise.reject(this.noLocalStorageError("getRefreshToken"));let t=localStorage.getItem("psg_refresh_token");return t===null?Promise.resolve(void 0):Promise.resolve(t)}setRefreshToken(t){return this.noLocalStorage&&Promise.reject(this.noLocalStorageError("setRefreshToken")),localStorage.setItem("psg_refresh_token",t),Promise.resolve()}setTokens(t){return this.noLocalStorage&&Promise.reject(this.noLocalStorageError("setTokens")),this.setAuthToken(t.auth_token),t.refresh_token&&this.setRefreshToken(t.refresh_token),Promise.resolve()}clearTokens(){return this.noLocalStorage&&Promise.reject(this.noLocalStorageError("clearTokens")),localStorage.removeItem("psg_auth_token"),document.cookie="psg_auth_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;",localStorage.removeItem("psg_refresh_token"),Promise.resolve()}_isLocalHost(){return Boolean(window.location.hostname==="localhost"||window.location.hostname==="[::1]"||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))}_isHttps(){return location.protocol==="https:"}};function P(s){return s.setTokens!==void 0}var we=s=>typeof s=="object"&&s!==null&&typeof s.auth_result<"u";function w(s,e){return we(s)?(P(e)&&e.setTokens(s.auth_result),s):(console.warn("Not a valid auth response"),s)}var Z=require("@passageidentity/webauthnutils");var F=(n=>(n.Platform="platform",n.CrossPlatform="cross-platform",n.Any="any",n))(F||{});var $=new f,ke=new _,N=class{constructor(e,t,n){this.tokenStore=t;this.apiUrl=e+"/register/",this.identifier=n}async withWebAuthn(e){var g;let t=await fetch(this.apiUrl+"webauthn/start",{headers:o(),body:JSON.stringify({identifier:this.identifier,authenticator_attachment:(g=e==null?void 0:e.authenticatorAttachment)!=null?g:"platform"}),method:"POST"}).then(c),n=t.handshake.challenge.publicKey,{credential:r,transports:h}=await Z.CreateCredentialUtils.createCredential(n).catch(b=>{throw new l("error parsing public key for webAuthn",{status:702,statusText:"PSG Parse Public Key For Login Failed"})}),a=new Uint8Array(r==null?void 0:r.response.attestationObject);M()&&(a=q(a));let d=t.user.id,S=await fetch(this.apiUrl+"webauthn/finish",{headers:o(),method:"POST",body:JSON.stringify({user_id:d,handshake_id:t.handshake.id,handshake_response:{rawId:$.encodeBytes(r==null?void 0:r.rawId),id:r==null?void 0:r.id,type:r==null?void 0:r.type,response:{attestationObject:$.encodeBytes(a),clientDataJSON:$.encodeBytes(r==null?void 0:r.response.clientDataJSON)},transports:h}})}).then(c).then(b=>w(b,this.tokenStore));return ke.setPsgCredID(d,r),S.auth_result}};var ee=require("@passageidentity/webauthnutils"),I=new f,O=class{constructor(e,t,n){this.tokenStore=t;this.apiUrl=e+"/login/",this.identifier=n!=null?n:""}async withWebAuthn(e){let t=JSON.stringify({identifier:this.identifier}),n=this.identifier?t:void 0,r=await fetch(this.apiUrl+"webauthn/start",{headers:o(),method:"POST",body:n}).then(c),h=r.handshake.challenge.publicKey,a=await ee.GetCredentialUtils.getCredential(h,e).catch(S=>{throw new l("error parsing public key for webAuthn",{status:702,statusText:"PSG Parse Public Key For Login Failed"})});return a?(await fetch(this.apiUrl+"webauthn/finish",{headers:o(),method:"POST",body:JSON.stringify({user_id:this.identifier?r.user.id:void 0,handshake_id:r.handshake.id,handshake_response:{id:a.id,rawId:I.encodeBytes(a.rawId),type:a.type,response:{clientDataJSON:I.encodeBytes(a.response.clientDataJSON),authenticatorData:I.encodeBytes(a.response.authenticatorData),signature:I.encodeBytes(a.response.signature),userHandle:I.encodeBytes(a.response.userHandle)}}})}).then(c).then(S=>w(S,this.tokenStore))).auth_result:{auth_token:"",redirect_url:""}}};var A=class{constructor(e){this.apiUrl=e}async appInfo(){return(await fetch(this.apiUrl,{headers:o(),method:"GET"}).then(c)).app}async identifierExists(e){return(await fetch(this.apiUrl+"/users?identifier="+encodeURIComponent(e),{headers:o(),method:"GET"}).then(c)).user}};var y=new f,te=new _,k=class{constructor(e,t){this.tokenStore=t;this.apiUrl=e}async newRegister(e,t){return(await fetch(this.apiUrl+"/register/magic-link",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,magic_link_path:window.location.pathname+window.location.search+window.location.hash,language:t})}).then(c)).magic_link}async newLogin(e,t){return(await fetch(this.apiUrl+"/login/magic-link",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,magic_link_path:window.location.pathname+window.location.search+window.location.hash,language:t})}).then(c)).magic_link}async getStatus(e){return(await fetch(this.apiUrl+"/magic-link/status",{headers:o(),method:"POST",body:JSON.stringify({id:e})}).then(c).then(n=>w(n,this.tokenStore))).auth_result}async activate(e){return(await fetch(this.apiUrl+"/magic-link/activate",{headers:o(),method:"PATCH",body:JSON.stringify({magic_link:e})}).then(c).then(n=>w(n,this.tokenStore))).auth_result}async activateWebAuthnLogin(e){let t=await fetch(this.apiUrl+"/magic-link/webauthn/login/start",{headers:o(),body:JSON.stringify({magic_link:e}),method:"POST"}).then(c);if(!await te.psgCredIDExists(t))throw new l("psg_cred_obj does not exist in the allow list",{status:700,statusText:"Not Found"});let r=await navigator.credentials.get({publicKey:this._parsePublicKeyLogin(t.handshake.challenge.publicKey)}).catch(a=>{throw new l("could not parse publickey for login",{status:702,statusText:"PSG Parse Public Key For Login Failed"})});return r?(await fetch(this.apiUrl+"/magic-link/webauthn/login/finish",{headers:o(),method:"POST",body:JSON.stringify({magic_link:e,user_id:t.user.id,handshake_id:t.handshake.id,handshake_response:{id:r.id,rawId:y.encodeBytes(r.rawId),type:r.type,response:{clientDataJSON:y.encodeBytes(r.response.clientDataJSON),authenticatorData:y.encodeBytes(r.response.authenticatorData),signature:y.encodeBytes(r.response.signature),userHandle:y.encodeBytes(r.response.userHandle)}}})}).then(c).then(a=>w(a,this.tokenStore))).auth_result:{auth_token:"",redirect_url:""}}async activateWebAuthnNewDevice(e){let t=await fetch(this.apiUrl+"/magic-link/webauthn/new/start",{headers:o(),body:JSON.stringify({magic_link:e}),method:"POST"}).then(c),n=await navigator.credentials.create({publicKey:this._parsePublicKeyNewDevice(t.handshake.challenge.publicKey)}).catch(d=>{throw new l("could not parse public key for new device",{status:701,statusText:"PSG Parse Public Key For New Device Failed"})}),r=new Uint8Array(n==null?void 0:n.response.attestationObject);M()&&(r=q(r));let h=await fetch(this.apiUrl+"/magic-link/webauthn/new/finish",{headers:o(),method:"POST",body:JSON.stringify({magic_link:e,user_id:t.user.id,handshake_id:t.handshake.id,handshake_response:{rawId:y.encodeBytes(n.rawId),id:n.id,type:n.type,response:{attestationObject:y.encodeBytes(r),clientDataJSON:y.encodeBytes(n.response.clientDataJSON)}},device_name:navigator.userAgent})}).then(c).then(d=>w(d,this.tokenStore)),a=t.user.id;return te.setPsgCredID(a,n),h.auth_result}_parsePublicKeyLogin(e){if(e.challenge=y.decodeBytes(e.challenge.toString()),e.allowCredentials){for(let t=0;t<e.allowCredentials.length;t++){let n=e.allowCredentials[t];n.id=y.decodeBytes(n.id.toString())}return e}return e}_parsePublicKeyNewDevice(e){return e.challenge=y.decodeBytes(e.challenge.toString()),e.user.id=y.decodeBytes(e.user.id.toString()),e}};var R=class{constructor(e,t){this.tokenStore=t;this.apiUrl=e}async newRegister(e,t){return await fetch(this.apiUrl+"/register/otp",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,language:t})}).then(c)}async newLogin(e,t){return await fetch(this.apiUrl+"/login/otp",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,language:t})}).then(c)}async activate(e,t){return(await fetch(this.apiUrl+"/otp/activate",{headers:o(),method:"POST",body:JSON.stringify({otp:e,otp_id:t})}).then(c).then(r=>w(r,this.tokenStore))).auth_result}};var ne=(n=>(n.ACTIVE="active",n.INACTIVE="inactive",n.PENDING="pending",n))(ne||{}),V=(n=>(n.Platform="platform",n.Passkey="passkey",n.SecurityKey="security_key",n))(V||{});var K=Y(require("jwt-decode"),1);function x(s){return`${m.URL}/v1/apps/${s}`}var v=class{constructor(e,t){this.tokenStore=t;this.apiUrl=x(e)+"/tokens/"}async authGuard(){try{let e=await this.tokenStore.getAuthToken(),t=(0,K.default)(e,{header:!0}),n=(0,K.default)(e);return!!(n!==void 0&&t!==void 0&&this._validJWTPayload(n)&&this._validJWTHeader(t))}catch{return!1}}async signOut(){let e=await this.tokenStore.getRefreshToken();return e?fetch(`${this.apiUrl}?`+new URLSearchParams({refresh_token:e}),{method:"DELETE"}).then(({status:t})=>t===200).finally(()=>{P(this.tokenStore)&&this.tokenStore.clearTokens()}):(P(this.tokenStore)&&this.tokenStore.clearTokens(),!0)}async getAuthToken(){let e=await this.tokenStore.getAuthToken();if(await this.tokenStore.getRefreshToken()===void 0){if(!e)throw new l("Login required",{status:704,statusText:"Login required"});return e}if(e){let n=(0,K.default)(e);if(n!==void 0&&this._validJWTPayload(n))return Promise.resolve(e)}return this.refresh().then(n=>n.auth_token)}async refresh(){let e=new l("Login required",{status:704,statusText:"Login required"}),t=await this.tokenStore.getRefreshToken();return t?fetch(this.apiUrl,{headers:o(),method:"POST",body:JSON.stringify({refresh_token:t})}).then(c).then(n=>(P(this.tokenStore)&&this.tokenStore.setTokens(n.auth_result),n.auth_result)).catch(()=>{throw e}):Promise.reject(e)}_validJWTPayload(e){let t=["exp","iss","sub"],n=Math.floor(Date.now()/1e3);return t.forEach(r=>{if(!(r in e))return!1}),!(e.exp&&n>e.exp)}_validJWTHeader(e){let t={alg:"RS256",typ:"JWT"};return!(e.alg!==t.alg||e.typ!==t.typ)}};var B=new f,re=new _,C=class{constructor(e,t){this.tokenStore=t;this.apiUrl=x(e)+"/currentuser",this.session=new v(e,this.tokenStore)}async userInfo(){let e=await this._getToken(),t=await fetch(this.apiUrl,{method:"GET",headers:o({Authorization:`Bearer ${e}`})}).then(async n=>n.status!==200?void 0:await n.json()).catch(n=>{throw new l("Failed to fetch current user.",{status:404,statusText:"Not Found"})});return t==null?void 0:t.user}async changeEmail(e,t){let n=await this._getToken();return(await fetch(`${this.apiUrl}/email`,{method:"PATCH",headers:o({Authorization:`Bearer ${n}`,"Content-Type":"application/json"}),body:JSON.stringify({new_email:e,language:t})}).then(c)).magic_link}async changePhone(e,t){let n=await this._getToken();return(await fetch(`${this.apiUrl}/phone`,{method:"PATCH",headers:o({Authorization:`Bearer ${n}`,"Content-Type":"application/json"}),body:JSON.stringify({new_phone:e,language:t})}).then(c)).magic_link}async editDevice(e,t){if(e===""||e===void 0)throw new l("A deviceID is required for an edit device request.",{status:400,statusText:"Bad Request"});if(Object.keys(t).length===0)throw new l("Edit device request must not have an empty request body.",{status:400,statusText:"Bad Request"});let n=await this._getToken();return(await fetch(`${this.apiUrl}/devices/${e}`,{method:"PATCH",headers:o({Authorization:`Bearer ${n}`,"Content-Type":"application/json"}),body:JSON.stringify({...t})}).then(c)).device}async listDevices(){let e=await this._getToken();return(await fetch(`${this.apiUrl}/devices/`,{method:"GET",headers:o({Authorization:`Bearer ${e}`,"Content-Type":"application/json"})}).then(c)).devices}async addDevice(e){var S;let t=await this._getToken(),n=await fetch(this.apiUrl+"/devices/start",{headers:o({Authorization:`Bearer ${t}`}),body:JSON.stringify({authenticator_attachment:(S=e==null?void 0:e.authenticatorAttachment)!=null?S:"platform"}),method:"POST"}).then(c),r=await navigator.credentials.create({publicKey:this._parsePublicKey(n.handshake.challenge.publicKey)}).catch(g=>{throw new l("failed to parse public key",{status:701,statusText:"PSG Parse Public Key For New Device Failed"})}).then(g=>g),h=[];(r==null?void 0:r.response.getTransports)&&typeof(r==null?void 0:r.response.getTransports)=="function"&&(h=r==null?void 0:r.response.getTransports());let a=n.user.id,d=await fetch(this.apiUrl+"/devices/finish",{headers:o({Authorization:`Bearer ${t}`}),method:"POST",body:JSON.stringify({user_id:a,handshake_id:n.handshake.id,handshake_response:{rawId:B.encodeBytes(r==null?void 0:r.rawId),id:r==null?void 0:r.id,type:r==null?void 0:r.type,response:{attestationObject:B.encodeBytes(r==null?void 0:r.response.attestationObject),clientDataJSON:B.encodeBytes(r==null?void 0:r.response.clientDataJSON)},transports:h}})}).then(c);return re.setPsgCredID(a,r),d.device}async deleteDevice(e){let t=typeof e=="string"?e:e.id,n=typeof e=="string"?void 0:e.cred_id;if(!t)throw new l("A deviceID is required to delete a device.",{status:404,statusText:"Not Found"});let r=!1,h=await this._getToken();return r=await fetch(`${this.apiUrl}/devices/${t}`,{method:"DELETE",headers:o({Authorization:`Bearer ${h}`,"Content-Type":"application/json"})}).then(async a=>a.ok?!0:await a.text().then(d=>{throw new l(d,a)})),r&&n!==void 0&&re.removeCredential(n),r}async getMetadata(){let e=await this._getToken();return(await fetch(`${this.apiUrl}/user-metadata`,{method:"GET",headers:o({Authorization:`Bearer ${e}`})}).then(c)).user_metadata}async updateMetadata(e){let t=await this._getToken();return(await fetch(`${this.apiUrl}/user-metadata`,{method:"PATCH",headers:o({Authorization:`Bearer ${t}`,"Content-Type":"application/json"}),body:JSON.stringify({user_metadata:e})}).then(c)).user}_parsePublicKey(e){return e.challenge=B.decodeBytes(e.challenge.toString()),e.user.id=B.decodeBytes(e.user.id.toString()),e}async _getToken(){return await this.session.getAuthToken()}};var ie=require("@passageidentity/webauthnutils"),j=class{async getBrowserInfo(){let e=await ie.GetCredentialUtils.getCredentialAvailable();return{createPassKeySupported:e.syncedCredential,getPassKeySupported:e.syncedCredential,conditionalUISupported:e.conditionalUI}}};var D=require("@passageidentity/webauthnutils");var z=class{constructor(e,t){this.appID=e;this.fullUrl=x(this.appID),(t==null?void 0:t.tokenStore)===void 0?this.tokenStore=new U:this.tokenStore=t.tokenStore,this.extraHeaders=t==null?void 0:t.extraHeaders,m.EXTRA_HEADERS=this.extraHeaders}credIDExists(e){let t=new _().getPsgCredObj();return t?!!JSON.parse(t)[e]:!1}async register(e,t){return await new N(this.fullUrl,this.tokenStore,e).withWebAuthn(t)}async login(e){return await new O(this.fullUrl,this.tokenStore,e).withWebAuthn()}async loginConditional(e){return await new O(this.fullUrl,this.tokenStore).withWebAuthn({mediation:"conditional",signal:e})}async appInfo(){return await new A(this.fullUrl).appInfo()}async browserInfo(){return await new j().getBrowserInfo()}async getCredentialAvailable(){return await D.GetCredentialUtils.getCredentialAvailable()}async createCredentialAvailable(){return await D.CreateCredentialUtils.createCredentialAvailable()}checkWebauthnConfig(e){let t=!0;return e.auth_origin.replace(/\/$/,"")!=window.location.origin.replace(/\/$/,"")&&(console.error('The auth_origin configured for webauthn in your app settings does not match the "origin" of your current URL.  Please reconfigure this in the admin console. (Your current "origin" is `'+window.location.origin+"`) Passage will continue to work with other authentication methods."),t=!1),t}async isWebauthnSupported(e){let t=await D.CreateCredentialUtils.createCredentialAvailable();return e?t.securityKey:t.platform}async identifierExists(e){let n=await new A(this.fullUrl).identifierExists(e);return n&&(n.hasPasskey=n.webauthn_types.includes("passkey"),n)}async newRegisterMagicLink(e,t){return await new k(this.fullUrl,this.tokenStore).newRegister(e,t)}async newLoginMagicLink(e,t){return await new k(this.fullUrl,this.tokenStore).newLogin(e,t)}async magicLinkActivate(e){return await new k(this.fullUrl,this.tokenStore).activate(e)}async magicLinkActivateWebAuthnLogin(e){return await new k(this.fullUrl,this.tokenStore).activateWebAuthnLogin(e)}async magicLinkActivateWebAuthnNewDevice(e){return await new k(this.fullUrl,this.tokenStore).activateWebAuthnNewDevice(e)}async getMagicLinkStatus(e){return await new k(this.fullUrl,this.tokenStore).getStatus(e)}async newRegisterOneTimePasscode(e,t){return await new R(this.fullUrl,this.tokenStore).newRegister(e,t)}async newLoginOneTimePasscode(e,t){return await new R(this.fullUrl,this.tokenStore).newLogin(e,t)}async oneTimePasscodeActivate(e,t){return await new R(this.fullUrl,this.tokenStore).activate(e,t)}getCurrentUser(){return new C(this.appID,this.tokenStore)}getCurrentSession(){return new v(this.appID,this.tokenStore)}async createUser(e){return(await fetch(`${this.fullUrl}/users`,{headers:o(),body:JSON.stringify({...e}),method:"POST"}).then(c)).user}};var se=require("serialize-error");var oe=s=>JSON.parse(JSON.stringify(s,(e,t)=>{if(!(t==null||t==="undefined"))return t})),Se=async s=>{try{let{error:e,message:t,sentryConfig:{url:n=m.CAPTURE_EVENT_URL,project:r=m.SENTRY_PROJECT,dsn:h=m.SENTRY_PROJECT_DSN,environment:a=m.SENTRY_PROJECT_ENV,release:d=m.SENTRY_RELEASE,version:S=m.SENTRY_PROJECT_VERSION}={}}=s,g=oe({project:r,dsn:h,environment:a,url:n,release:d,version:S});if(!(g.project&&g.url)||!(e||t))return;let b={project:g.project,dsn:g.dsn,environment:g.environment,release:g.release,version:g.version};t&&(b={...b,message:t}),e&&(b={...b,serializedError:(0,se.serializeError)(typeof e=="string"?new Error(e):e)}),await fetch(g.url,{headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST",body:JSON.stringify(b)})}catch(e){console.error(e)}};var ae=(n=>(n.email="email",n.phone="phone",n.both="both",n))(ae||{}),ce=(r=>(r.Phone="phone",r.Email="email",r.Both="both",r.Either="either",r))(ce||{}),ue=(a=>(a.STRING="string",a.BOOLEAN="boolean",a.INTEGER="integer",a.DATE="date",a.PHONE="phone",a.EMAIL="email",a))(ue||{}),le=(n=>(n.LoginCode="otp",n.MagicLink="magic_link",n.None="none",n))(le||{}),he=(p=>(p.ANDALE_MONO="Andal\xE9 Mono",p.ARIAL="Arial",p.ARIAL_BLACK="Arial Black",p.BASKERVILLE="Baskerville",p.BRADLEY_HAND="Bradley Hand",p.BRUSH_SCRIPT_MT="Brush Script MT",p.COMIC_SANS_MS="Comic Sans MS",p.COURIER="Courier",p.GEORGIA="Georgia",p.GILL_SANS="Gill Sans",p.HELVETICA="Helvetica",p.IMPACT="Impact",p.LUCIDA="Lucida",p.LUMINARI="Luminari",p.MONACO="Monaco",p.PALATINO="Palatino",p.TAHOMA="Tahoma",p.TIMES_NEW_ROMAN="Times New Roman",p.TREBUCHET_MS="Trebuchet MS",p.VERDANA="Verdana",p))(he||{});0&&(module.exports={AllowedFallbackAuth,AuthenticatorAttachment,Identifier,Passage,PassageError,PassageErrorCode,PassageTokenStore,PassageUserStatus,ReadOnlyTokenStore,RequiredIdentifier,Session,TokenStore,User,UserMetadataType,WebAuthnType,WebSafeFonts,captureEvent,cleanSentryConfig,isFullTokenStore});
//#